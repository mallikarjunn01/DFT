
// Generated by Cadence Genus(TM) Synthesis Solution 20.11-s111_1
// Generated on: Mar 21 2025 12:47:38 IST (Mar 21 2025 07:17:38 UTC)

// Verification Directory fv/s298 

module s298(CK, G0, G1, G117, G118, G132, G133, G2, G66, G67);
  input CK, G0, G1, G2;
  output G117, G118, G132, G133, G66, G67;
  wire CK, G0, G1, G2;
  wire G117, G118, G132, G133, G66, G67;
  wire G10, G11, G12, G13, G14, G15, G22, G23;
  wire n_131, n_132, n_133, n_137, n_138, n_139, n_140, n_142;
  wire n_143, n_145, n_146, n_147, n_148, n_149, n_150, n_151;
  wire n_152, n_153, n_157, n_161, n_162, n_163, n_164, n_165;
  wire n_166, n_167, n_168, n_169, n_170, n_173, n_176, n_179;
  wire n_184, n_185, n_190, n_196, n_197, n_206, n_208, n_209;
  wire n_212, n_219, n_220, n_221, n_228, n_229, n_230, n_235;
  wire n_236, n_239, n_248, n_249, n_250, n_251, n_254, n_261;
  wire n_262, n_263, n_268, n_269, n_278, n_279, n_280, n_281;
  wire n_288, n_289, n_290, n_297, n_298, n_299, n_305, n_306;
  wire n_307, n_308, n_309, n_310, n_311, n_312, n_313, n_314;
  wire n_315, n_316, n_317, n_318;
  CDN_flop DFF_0_q_reg(.clk (CK), .d (n_314), .sena (1'b1), .aclr
       (1'b0), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q (G10));
  CDN_flop DFF_1_q_reg(.clk (CK), .d (n_150), .sena (1'b1), .aclr
       (1'b0), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q (G11));
  CDN_flop DFF_2_q_reg(.clk (CK), .d (n_309), .sena (1'b1), .aclr
       (1'b0), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q (G12));
  CDN_flop DFF_3_q_reg(.clk (CK), .d (n_142), .sena (1'b1), .aclr
       (1'b0), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q (G13));
  CDN_flop DFF_4_q_reg(.clk (CK), .d (n_306), .sena (1'b1), .aclr
       (1'b0), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q (G14));
  CDN_flop DFF_5_q_reg(.clk (CK), .d (n_305), .sena (1'b1), .aclr
       (1'b0), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q (G15));
  CDN_flop DFF_6_q_reg(.clk (CK), .d (n_139), .sena (1'b1), .aclr
       (1'b0), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q (G66));
  CDN_flop DFF_7_q_reg(.clk (CK), .d (n_149), .sena (1'b1), .aclr
       (1'b0), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q (G67));
  CDN_flop DFF_8_q_reg(.clk (CK), .d (n_148), .sena (1'b1), .aclr
       (1'b0), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q (G117));
  CDN_flop DFF_9_q_reg(.clk (CK), .d (n_152), .sena (1'b1), .aclr
       (1'b0), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q (G118));
  CDN_flop DFF_10_q_reg(.clk (CK), .d (n_151), .sena (1'b1), .aclr
       (1'b0), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q (G132));
  CDN_flop DFF_11_q_reg(.clk (CK), .d (n_146), .sena (1'b1), .aclr
       (1'b0), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q (G133));
  CDN_flop DFF_12_q_reg(.clk (CK), .d (n_311), .sena (1'b1), .aclr
       (1'b0), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q (G22));
  CDN_flop DFF_13_q_reg(.clk (CK), .d (n_310), .sena (1'b1), .aclr
       (1'b0), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q (G23));
  nand g249 (n_140, G10, G11);
  or g413 (n_132, wc, G12);
  not gc (wc, G13);
  or g437 (n_157, G13, G12);
  or g571 (n_151, wc0, n_262);
  not gc0 (wc0, n_263);
  nand g572 (n_142, n_268, n_269);
  nand g573 (n_139, n_138, n_254);
  or g574 (n_152, n_281, wc1);
  not gc1 (wc1, n_138);
  or g575 (n_263, G10, wc2);
  not gc2 (wc2, n_133);
  or g578 (n_268, wc3, G0);
  not gc3 (wc3, n_163);
  nand g579 (n_163, n_235, n_236);
  or g580 (n_138, G14, wc4);
  not gc4 (wc4, n_166);
  or g581 (n_148, wc5, n_230);
  not gc5 (wc5, n_229);
  or g584 (n_281, wc6, n_280);
  not gc6 (wc6, n_279);
  or g585 (n_149, wc7, n_299);
  not gc7 (wc7, n_298);
  nand g586 (n_133, n_250, n_251);
  nand g587 (n_299, n_297, n_228);
  or g588 (n_307, wc8, n_143);
  not gc8 (wc8, G14);
  or g589 (n_308, G14, wc9);
  not gc9 (wc9, n_143);
  nand g590 (n_169, n_307, n_308);
  nand g591 (n_235, n_162, G12);
  nand g592 (n_262, n_153, n_261);
  nand g593 (n_150, n_289, n_290);
  nand g594 (n_280, n_278, n_153);
  nand g595 (n_230, n_145, n_228);
  nand g596 (n_166, n_208, n_209);
  nand g597 (n_250, n_161, G15);
  nand g598 (n_146, n_220, n_221);
  or g599 (n_208, n_206, wc10);
  not gc10 (wc10, n_165);
  or g600 (n_298, wc11, n_137);
  not gc11 (wc11, G67);
  or g601 (n_278, G10, wc12);
  not gc12 (wc12, n_164);
  or g602 (n_261, wc13, n_137);
  not gc13 (wc13, G132);
  nand g603 (n_162, n_196, n_197);
  or g604 (n_251, n_132, n_249);
  or g605 (n_254, wc14, n_137);
  not gc14 (wc14, G66);
  or g606 (n_153, n_239, n_147);
  or g609 (n_290, n_288, G0);
  or g610 (n_229, wc15, n_137);
  not gc15 (wc15, G117);
  or g611 (n_228, wc16, n_147);
  not gc16 (wc16, G11);
  or g612 (n_221, n_219, n_145);
  or g613 (n_161, n_236, n_190);
  or g614 (n_220, wc17, n_137);
  not gc17 (wc17, G133);
  or g615 (n_297, G11, n_145);
  or g616 (n_143, G23, wc18);
  not gc18 (wc18, n_185);
  or g617 (n_279, wc19, n_137);
  not gc19 (wc19, G118);
  or g618 (n_209, G22, n_236);
  or g619 (n_249, G11, n_248);
  or g620 (n_147, n_157, G15);
  or g621 (n_269, wc20, n_131);
  not gc20 (wc20, G13);
  or g622 (n_289, wc21, n_131);
  not gc21 (wc21, G11);
  or g623 (n_288, n_184, wc22);
  not gc22 (wc22, n_132);
  or g628 (n_165, G11, n_176);
  or g629 (n_185, n_132, n_184);
  nand g630 (n_312, G12, n_140);
  or g631 (n_313, G12, n_140);
  nand g632 (n_170, n_312, n_313);
  or g633 (n_164, G15, wc23);
  not gc23 (wc23, n_173);
  or g634 (n_236, wc24, n_132);
  not gc24 (wc24, G11);
  or g635 (n_196, G13, n_140);
  or g636 (n_145, G14, n_179);
  or g637 (n_137, n_212, wc25);
  not gc25 (wc25, n_157);
  or g638 (n_179, G15, G13);
  or g639 (n_197, G11, wc26);
  not gc26 (wc26, G13);
  or g640 (n_173, wc27, G14);
  not gc27 (wc27, G13);
  or g641 (n_206, wc28, G15);
  not gc28 (wc28, G13);
  or g642 (n_131, G10, G0);
  not g643 (n_314, n_131);
  or g644 (n_184, wc29, G11);
  not gc29 (wc29, G10);
  or g645 (n_212, wc30, G15);
  not gc30 (wc30, G14);
  or g646 (n_315, wc31, G2);
  not gc31 (wc31, G22);
  or g647 (n_316, G22, wc32);
  not gc32 (wc32, G2);
  nand g648 (n_168, n_315, n_316);
  nand g649 (n_219, G12, G11);
  or g650 (n_317, wc33, G1);
  not gc33 (wc33, G23);
  or g651 (n_318, G23, wc34);
  not gc34 (wc34, G1);
  nand g652 (n_167, n_317, n_318);
  or g653 (n_239, G11, wc35);
  not gc35 (wc35, G14);
  or g654 (n_248, G14, wc36);
  not gc36 (wc36, G22);
  or g655 (n_190, G22, G14);
  or g656 (n_176, G12, wc37);
  not gc37 (wc37, G22);
  and g657 (n_310, wc38, n_167);
  not gc38 (wc38, G0);
  and g658 (n_311, wc39, n_168);
  not gc39 (wc39, G0);
  and g659 (n_309, wc40, n_170);
  not gc40 (wc40, G0);
  and g660 (n_305, wc41, n_133);
  not gc41 (wc41, G0);
  and g661 (n_306, wc42, n_169);
  not gc42 (wc42, G0);
endmodule

`ifdef RC_CDN_GENERIC_GATE
`else
module CDN_flop(clk, d, sena, aclr, apre, srl, srd, q);
  input clk, d, sena, aclr, apre, srl, srd;
  output q;
  wire clk, d, sena, aclr, apre, srl, srd;
  wire q;
  reg  qi;
  assign #1 q = qi;
  always 
    @(posedge clk or posedge apre or posedge aclr) 
      if (aclr) 
        qi <= 0;
      else if (apre) 
          qi <= 1;
        else if (srl) 
            qi <= srd;
          else begin
            if (sena) 
              qi <= d;
          end
  initial 
    qi <= 1'b0;
endmodule
`endif
