/* $Id$ 
 * Copyright (c) 2004 Artisan Components, Inc.  All Rights Reserved.
 * 
 * CONFIDENTIAL AND PROPRIETARY SOFTWARE/DATA OF ARTISAN COMPONENTS, INC.
 * 
 * This file has been provided pursuant to a License Agreement containing
 * restrictions on its use.  This file contains valuable trade secrets and
 * proprietary information of Artisan Components, Inc., and is protected by
 * U.S. and international laws and/or treaties.
 * 
 * The copyright notice(s) in this file does not indicate actual or intended
 * publication of this file.
 * 
 * artix(v4.36.00)-artichar(v3.66.01)-syntech(1.58)
 *
 * process (ss), voltage (1.08v), temp (85)
 * 
 * corner: slow_1v08_1v08
 */
/* table model: cell-delay */
library(ss_pg_0v70_1v08) {

  /* general attributes */
  delay_model : table_lookup;
  in_place_swap_mode : match_footprint;
  library_features(report_delay_calculation);

  /* documentation attributes */
  revision : 1.0;
  date : "Mon Sep 13 10:25:50 2004";
  comment : "Copyright (c) 2004 Artisan Components, Inc.  All Rights Reserved.";

  /* unit attributes */
  time_unit : "1ns";
  voltage_unit : "1V";
  current_unit : "1mA";
  pulling_resistance_unit : "1kohm";
  leakage_power_unit : "1pW";
  capacitive_load_unit (1.0,pf);
 
 
  power_supply() { 
	default_power_rail : VDD;
	power_rail (VDDG, 1.08); /* global (high/low unspecified) power */
	power_rail (VDDV, 1.08); /* local (virtual) (high/low unspecified) power */
	power_rail (VDDH, 1.08); /* high (local) power */
/*	power_rail (VDDL, 0.80);  low (local) power */
	power_rail (VDDL, 0.70); /* low (local) power */
	power_rail (VSSG, 0.0);  /* global ground */
	power_rail (VSS, 0.0);   /* local ground */
  } 
 

  /* operation conditions */
  nom_process     : 1;
  nom_temperature : 85;
  nom_voltage     : 1.08;
/*  operating_conditions(slow_0v80_1v08) {*/
  operating_conditions(slow_0v70_1v08) {
    process	: 1;
    temperature	: 85;
    voltage	: 1.08;
    tree_type	: balanced_tree
    power_rail (VDDG, 1.08); /* global (high/low unspecified) power */
    power_rail (VDDV, 1.08); /* local (virtual) (high/low unspecified) power */
    power_rail (VDDH, 1.08); /* high (local) power */
/*    power_rail (VDDL, 0.80); low (local) power */
    power_rail (VDDL, 0.70); /* low (local) power */
    power_rail (VSSG, 0.0);  /* global ground */
    power_rail (VSS, 0.0);   /* local ground */
  }
  default_operating_conditions : slow_0v80_1v08;

  /* threshold definitions */
  slew_lower_threshold_pct_fall : 30.0;
  slew_upper_threshold_pct_fall : 70.0;
  slew_lower_threshold_pct_rise : 30.0;
  slew_upper_threshold_pct_rise : 70.0;
  input_threshold_pct_fall      : 50.0;
  input_threshold_pct_rise      : 50.0;
  output_threshold_pct_fall     : 50.0;
  output_threshold_pct_rise     : 50.0;
  slew_derate_from_library      : 0.5;

  /* default attributes */
  default_leakage_power_density	: 0.0;
  default_cell_leakage_power	: 0.0;
  default_fanout_load	: 1.0;
  default_output_pin_cap	: 0.0;
  default_inout_pin_cap	: 0.00158;
  default_input_pin_cap	: 0.00158;
  default_max_transition	: 1.5;

  /* templates */
  iv_lut_template(iv_ov_50) {
    variable_1 : iv_output_voltage;
    index_1 ("1, 2, 3, 4, 5, 6, 7, 8, 9, 10, \
              11, 12, 13, 14, 15, 16, 17, 18, 19, 20, \
              21, 22, 23, 24, 25, 26, 27, 28, 29, 30, \
              31, 32, 33, 34, 35, 36, 37, 38, 39, 40, \
              41, 42, 43, 44, 45, 46, 47, 48, 49, 50");
  }
  lu_table_template(delay_template_7x1) {
    variable_1 : input_net_transition;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  power_lut_template(energy_template_7x1) {
    variable_1 : input_transition_time;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  lu_table_template(delay_template_7x7) {
    variable_1 : input_net_transition;
    variable_2 : total_output_net_capacitance;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
    index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  power_lut_template(energy_template_7x7) {
    variable_1 : input_transition_time;
    variable_2 : total_output_net_capacitance;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
    index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  power_lut_template(energy_template_1x7) {
    variable_1 : total_output_net_capacitance;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  power_lut_template(energy_template_7x3x3) {
    variable_1 : input_transition_time;
    variable_2 : total_output_net_capacitance;
    variable_3 : equal_or_opposite_output_net_capacitance;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
    index_2 ("1000, 1001, 1002");
    index_3 ("1000, 1001, 1002");
  }
  power_lut_template(passive_energy_template_1x7) {
    variable_1 : input_transition_time;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  lu_table_template(setup_template_3x3) {
    variable_1 : constrained_pin_transition;
    variable_2 : related_pin_transition;
    index_1 ("1000, 1001, 1002");
    index_2 ("1000, 1001, 1002");
  }
  lu_table_template(hold_template_3x3) {
    variable_1 : constrained_pin_transition;
    variable_2 : related_pin_transition;
    index_1 ("1000, 1001, 1002");
    index_2 ("1000, 1001, 1002");
  }
  lu_table_template(recovery_template_3x3) {
    variable_1 : constrained_pin_transition;
    variable_2 : related_pin_transition;
    index_1 ("1000, 1001, 1002");
    index_2 ("1000, 1001, 1002");
  }
  lu_table_template(removal_template_3x3) {
    variable_1 : constrained_pin_transition;
    variable_2 : related_pin_transition;
    index_1 ("1000, 1001, 1002");
    index_2 ("1000, 1001, 1002");
  }

  /* k-factors */
  k_process_cell_leakage_power	: 0;
  k_temp_cell_leakage_power	: 0;
  k_volt_cell_leakage_power	: 0;
  k_process_internal_power	: 0;
  k_temp_internal_power	: 0;
  k_volt_internal_power	: 0;
  k_process_rise_transition	: 1;
  k_temp_rise_transition	: 0;
  k_volt_rise_transition	: 0;
  k_process_fall_transition	: 1;
  k_temp_fall_transition	: 0;
  k_volt_fall_transition	: 0;
  k_process_setup_rise	: 1;
  k_temp_setup_rise	: 0;
  k_volt_setup_rise	: 0;
  k_process_setup_fall	: 1;
  k_temp_setup_fall	: 0;
  k_volt_setup_fall	: 0;
  k_process_hold_rise	: 1;
  k_temp_hold_rise	: 0;
  k_volt_hold_rise	: 0;
  k_process_hold_fall	: 1;
  k_temp_hold_fall	: 0;
  k_volt_hold_fall	: 0;
  k_process_min_pulse_width_high	: 1;
  k_temp_min_pulse_width_high	: 0;
  k_volt_min_pulse_width_high	: 0;
  k_process_min_pulse_width_low	: 1;
  k_temp_min_pulse_width_low	: 0;
  k_volt_min_pulse_width_low	: 0;
  k_process_recovery_rise	: 1;
  k_temp_recovery_rise	: 0;
  k_volt_recovery_rise	: 0;
  k_process_recovery_fall	: 1;
  k_temp_recovery_fall	: 0;
  k_volt_recovery_fall	: 0;
  k_process_cell_rise	: 1;
  k_temp_cell_rise	: 0;
  k_volt_cell_rise	: 0;
  k_process_cell_fall	: 1;
  k_temp_cell_fall	: 0;
  k_volt_cell_fall	: 0;
  k_process_wire_cap	: 0;
  k_temp_wire_cap	: 0;
  k_volt_wire_cap	: 0;
  k_process_wire_res	: 0;
  k_temp_wire_res	: 0;
  k_volt_wire_res	: 0;
  k_process_pin_cap	: 0;
  k_temp_pin_cap	: 0;
  k_volt_pin_cap	: 0;

  
/* end of header section */
/* $Id$ 
 * Copyright (c) 2004 Artisan Components, Inc.  All Rights Reserved.
 * 
 * CONFIDENTIAL AND PROPRIETARY SOFTWARE/DATA OF ARTISAN COMPONENTS, INC.
 * 
 * This file has been provided pursuant to a License Agreement containing
 * restrictions on its use.  This file contains valuable trade secrets and
 * proprietary information of Artisan Components, Inc., and is protected by
 * U.S. and international laws and/or treaties.
 * 
 * The copyright notice(s) in this file does not indicate actual or intended
 * publication of this file.
 * 
 * artix(v4.36.00)-artichar(v3.66.01)-syntech(1.58)
 *
 * process (ss), voltage (1.08v), temp (85)
 * 
 * com1_ss_4_4/HEAD8/ - Mon Sep 13 10:26:06 2004
 */
cell (HEAD8DM) { 
  cell_footprint : headd;
  area : 5.883500;

/*  pin(A) {                  */
/*    direction : input;      */
/*    capacitance : 0.001356; */
/*  }                         */

  pin(SLEEP) {
    direction : input;
    capacitance : 0.002035;
  }

/*  pin(VDDG) {               */
/*    direction : input;      */
/*    capacitance : 0.002035; */
/*  }                         */

/* Do I need power level for pin VDD? */
  pin(VDD) {
    direction : output;
    capacitance : 0.001741;
/*    function : "(VDDG !SLEEP)"; */
    function : "(!SLEEP)";
    internal_power() {
      power_level : VDDG;
      related_pin : "SLEEP";
      rise_power(scalar) {
        values("0.000");
      }
      fall_power(scalar) {
        values("0.000");
      }
    }
    timing() {
      related_pin : "SLEEP";
      timing_sense : positive_unate;

/* Cell rise is not characterized */
      cell_rise(scalar) {
        values("0.000");
      }

/* Cell fall is not characterized */
      cell_fall(scalar) {
        values("0.000");
      }

/* rise_transition is not characterized */
      rise_transition(scalar) {
        values("0.000");
      }

/* fall_transition is not characterized */
      fall_transition(scalar) {
        values("0.000");
      }

/* SLEEP is 1 */
      steady_state_current_high(iv_ov_50) {
        index_1 ("0.0000, 0.1000, 0.2000, 0.3000, 0.4000, 0.5000, 0.6000, 0.6300, 0.6600, 0.6800, \
                  0.6900, 0.7000, 0.7100, 0.7200, 0.7300, 0.7400, 0.7500, 0.7600, 0.7700, 0.7800, \
                  0.7900, 0.8000, 0.8100, 0.8200, 0.8300, 0.8400, 0.8500, 0.8600, 0.8700, 0.8800, \
                  0.8900, 0.9000, 0.9100, 0.9200, 0.9300, 0.9400, 0.9500, 0.9600, 0.9700, 0.9800, \
                  0.9900, 1.0000, 1.0100, 1.0200, 1.0300, 1.0400, 1.0500, 1.0600, 1.0700, 1.0800");
        values ("-0.0050, -0.0049, -0.0048, -0.0047, -0.0046, -0.0045, -0.0044, -0.0043, -0.0042, -0.0041, \
                 -0.0040, -0.0039, -0.0038, -0.0037, -0.0036, -0.0035, -0.0034, -0.0033, -0.0032, -0.0031, \
                 -0.0030, -0.0029, -0.0028, -0.0027, -0.0026, -0.0025, -0.0024, -0.0023, -0.0022, -0.0021, \
                 -0.0020, -0.0019, -0.0018, -0.0017, -0.0016, -0.0015, -0.0014, -0.0013, -0.0012, -0.0011, \
                 -0.0010, -0.0009, -0.0008, -0.0007, -0.0006, -0.0005, -0.0004, -0.0003, -0.0002,  0.0000");
      }

/* SLEEP is 0 */
      steady_state_current_low(iv_ov_50) {
        index_1 ("0.0000, 0.1000, 0.2000, 0.3000, 0.4000, 0.5000, 0.6000, 0.6300, 0.6600, 0.6800, \
                  0.6900, 0.7000, 0.7100, 0.7200, 0.7300, 0.7400, 0.7500, 0.7600, 0.7700, 0.7800, \
                  0.7900, 0.8000, 0.8100, 0.8200, 0.8300, 0.8400, 0.8500, 0.8600, 0.8700, 0.8800, \
                  0.8900, 0.9000, 0.9100, 0.9200, 0.9300, 0.9400, 0.9500, 0.9600, 0.9700, 0.9800, \
                  0.9900, 1.0000, 1.0100, 1.0200, 1.0300, 1.0400, 1.0500, 1.0600, 1.0700, 1.0800");
        values ("-50.0050, -49.0049, -48.0048, -47.0047, -46.0046, -45.0045, -44.0044, -43.0043, -42.0042, -41.0041, \
                 -40.0040, -39.0039, -38.0038, -37.0037, -36.0036, -35.0035, -34.0034, -33.0033, -32.0032, -31.0031, \
                 -30.0030, -29.0029, -28.0028, -27.0027, -26.0026, -25.0025, -24.0024, -23.0023, -22.0022, -21.0021, \
                 -20.0020, -19.0019, -18.0018, -17.0017, -16.0016, -15.0015, -14.0014, -13.0013, -12.0012, -11.0011, \
                 -0.9000, -0.8000, -0.7000, -0.6000, -0.5000, -0.4000, -0.3000, -0.2000, -0.1000,  0.0000");
      }
    }
  }
  pin(SLEEPOUT) {
    direction : output;
    capacitance : 0.0;
    function : "SLEEP";
    internal_power() {
      power_level : VDDG;
      related_pin : "SLEEP";
      rise_power(energy_template_7x7) {
        index_1 ("0.018, 0.028, 0.048, 0.09, 0.17, 0.334, 0.66");
        index_2 ("0.001165, 0.002796, 0.006291, 0.013048, 0.026795, 0.054289, 0.10951");
        values ( \
          "0.002231, 0.002255, 0.002274, 0.002255, 0.002146, 0.001875, 0.001305", \
          "0.002216, 0.002232, 0.002249, 0.002229, 0.002128, 0.001868, 0.001294", \
          "0.002225, 0.002231, 0.002237, 0.002218, 0.002122, 0.001864, 0.001287", \
          "0.002320, 0.002313, 0.002301, 0.002274, 0.002177, 0.001925, 0.001344", \
          "0.002630, 0.002606, 0.002540, 0.002487, 0.002377, 0.002130, 0.001576", \
          "0.003383, 0.003322, 0.003274, 0.003162, 0.002996, 0.002735, 0.002164", \
          "0.005096, 0.004944, 0.004815, 0.004714, 0.004615, 0.004116, 0.003529");
      }
      fall_power(energy_template_7x7) {
        index_1 ("0.018, 0.028, 0.048, 0.09, 0.17, 0.334, 0.66");
        index_2 ("0.001165, 0.002796, 0.006291, 0.013048, 0.026795, 0.054289, 0.10951");
        values ( \
          "0.003343, 0.003435, 0.003551, 0.003625, 0.003661, 0.003677, 0.003685", \
          "0.003330, 0.003421, 0.003535, 0.003610, 0.003647, 0.003664, 0.003674", \
          "0.003341, 0.003426, 0.003535, 0.003613, 0.003650, 0.003670, 0.003680", \
          "0.003470, 0.003526, 0.003627, 0.003687, 0.003721, 0.003741, 0.003755", \
          "0.003880, 0.003822, 0.003878, 0.003933, 0.003949, 0.003969, 0.003977", \
          "0.004872, 0.004742, 0.004611, 0.004541, 0.004514, 0.004510, 0.004518", \
          "0.006596, 0.006371, 0.006129, 0.005960, 0.005860, 0.005804, 0.005779");
      }
    }
    internal_power() {
      power_level : VSSG;
      related_pin : "SLEEP";
      rise_power(energy_template_7x7) {
        index_1 ("0.018, 0.028, 0.048, 0.09, 0.17, 0.334, 0.66");
        index_2 ("0.001165, 0.002796, 0.006291, 0.013048, 0.026795, 0.054289, 0.10951");
        values ( \
          "0.002231, 0.002255, 0.002274, 0.002255, 0.002146, 0.001875, 0.001305", \
          "0.002216, 0.002232, 0.002249, 0.002229, 0.002128, 0.001868, 0.001294", \
          "0.002225, 0.002231, 0.002237, 0.002218, 0.002122, 0.001864, 0.001287", \
          "0.002320, 0.002313, 0.002301, 0.002274, 0.002177, 0.001925, 0.001344", \
          "0.002630, 0.002606, 0.002540, 0.002487, 0.002377, 0.002130, 0.001576", \
          "0.003383, 0.003322, 0.003274, 0.003162, 0.002996, 0.002735, 0.002164", \
          "0.005096, 0.004944, 0.004815, 0.004714, 0.004615, 0.004116, 0.003529");
      }
      fall_power(energy_template_7x7) {
        index_1 ("0.018, 0.028, 0.048, 0.09, 0.17, 0.334, 0.66");
        index_2 ("0.001165, 0.002796, 0.006291, 0.013048, 0.026795, 0.054289, 0.10951");
        values ( \
          "0.003343, 0.003435, 0.003551, 0.003625, 0.003661, 0.003677, 0.003685", \
          "0.003330, 0.003421, 0.003535, 0.003610, 0.003647, 0.003664, 0.003674", \
          "0.003341, 0.003426, 0.003535, 0.003613, 0.003650, 0.003670, 0.003680", \
          "0.003470, 0.003526, 0.003627, 0.003687, 0.003721, 0.003741, 0.003755", \
          "0.003880, 0.003822, 0.003878, 0.003933, 0.003949, 0.003969, 0.003977", \
          "0.004872, 0.004742, 0.004611, 0.004541, 0.004514, 0.004510, 0.004518", \
          "0.006596, 0.006371, 0.006129, 0.005960, 0.005860, 0.005804, 0.005779");
      }
    }
    timing() {
      related_pin : "SLEEP";
      timing_sense : positive_unate;
      cell_rise(delay_template_7x7) {
        index_1 ("0.018, 0.028, 0.048, 0.09, 0.17, 0.334, 0.66");
        index_2 ("0.001165, 0.002796, 0.006291, 0.013048, 0.026795, 0.054289, 0.10951");
        values ( \
          "0.028520, 0.033232, 0.042725, 0.060557, 0.096415, 0.167795, 0.311052", \
          "0.030755, 0.035440, 0.044912, 0.062743, 0.098613, 0.170096, 0.313365", \
          "0.034673, 0.039333, 0.048745, 0.066528, 0.102444, 0.173868, 0.317166", \
          "0.039812, 0.044620, 0.054104, 0.071840, 0.107649, 0.179064, 0.322334", \
          "0.044736, 0.049892, 0.059523, 0.077187, 0.112932, 0.184245, 0.327506", \
          "0.047322, 0.053281, 0.063762, 0.081558, 0.117046, 0.188335, 0.331408", \
          "0.042023, 0.048896, 0.061163, 0.080471, 0.116209, 0.187383, 0.330440");
      }
      rise_transition(delay_template_7x7) {
        index_1 ("0.018, 0.028, 0.048, 0.09, 0.17, 0.334, 0.66");
        index_2 ("0.001165, 0.002796, 0.006291, 0.013048, 0.026795, 0.054289, 0.10951");
        values ( \
          "0.016612, 0.023951, 0.040337, 0.072889, 0.139561, 0.273002, 0.540978", \
          "0.016662, 0.023969, 0.040344, 0.072888, 0.139548, 0.273090, 0.541194", \
          "0.017190, 0.024251, 0.040415, 0.072888, 0.139618, 0.273018, 0.540868", \
          "0.019095, 0.025682, 0.041219, 0.073090, 0.139562, 0.272982, 0.540782", \
          "0.022573, 0.028484, 0.042692, 0.073853, 0.139918, 0.272924, 0.541042", \
          "0.028667, 0.034643, 0.047163, 0.075711, 0.140751, 0.273702, 0.540834", \
          "0.038366, 0.044926, 0.057612, 0.082514, 0.143882, 0.275138, 0.542110");
      }
      cell_fall(delay_template_7x7) {
        index_1 ("0.018, 0.028, 0.048, 0.09, 0.17, 0.334, 0.66");
        index_2 ("0.001165, 0.002796, 0.006291, 0.013048, 0.026795, 0.054289, 0.10951");
        values ( \
          "0.041322, 0.045394, 0.052591, 0.064364, 0.085784, 0.126748, 0.208391", \
          "0.043830, 0.047877, 0.055067, 0.066840, 0.088227, 0.129226, 0.210881", \
          "0.049216, 0.053249, 0.060436, 0.072216, 0.093678, 0.134640, 0.216291", \
          "0.060396, 0.064425, 0.071622, 0.083430, 0.104835, 0.145747, 0.227391", \
          "0.076921, 0.081336, 0.089112, 0.101369, 0.123034, 0.163946, 0.245480", \
          "0.102624, 0.107483, 0.116049, 0.129248, 0.151706, 0.193032, 0.274474", \
          "0.143637, 0.149106, 0.158896, 0.173814, 0.197867, 0.240037, 0.321709");
      }
      fall_transition(delay_template_7x7) {
        index_1 ("0.018, 0.028, 0.048, 0.09, 0.17, 0.334, 0.66");
        index_2 ("0.001165, 0.002796, 0.006291, 0.013048, 0.026795, 0.054289, 0.10951");
        values ( \
          "0.017614, 0.021800, 0.030159, 0.046233, 0.079956, 0.150550, 0.295006", \
          "0.017625, 0.021814, 0.030168, 0.046239, 0.079970, 0.150550, 0.295026", \
          "0.017667, 0.021852, 0.030195, 0.046246, 0.079959, 0.150551, 0.295012", \
          "0.018840, 0.022745, 0.030840, 0.046596, 0.080088, 0.150581, 0.295022", \
          "0.023244, 0.027054, 0.034621, 0.049352, 0.081331, 0.150863, 0.295230", \
          "0.029702, 0.033467, 0.040848, 0.054671, 0.085153, 0.152738, 0.295334", \
          "0.039734, 0.043491, 0.051321, 0.064721, 0.092723, 0.156989, 0.297806");
      }
    }
    max_capacitance : 0.109510;
  }
  cell_leakage_power : 7599.710000;
  leakage_power() {
    power_level : VDDG;
    when :"!SLEEP";
    value : 7599.710000;
  }
  leakage_power() {
    power_level : VDDG;
    when :"SLEEP";
    value : 6665.630000;
  }
  leakage_power() {
    power_level : VSSG;
    when :"!SLEEP";
    value : 7599.710000;
  }
  leakage_power() {
    power_level : VSSG;
    when :"SLEEP";
    value : 6665.630000;
  }
} /* end cell */
cell (HEAD16DM) { 
  cell_footprint : headd;
  area : 5.883500;

/*  pin(A) {                  */
/*    direction : input;      */
/*    capacitance : 0.001356; */
/*  }                         */

  pin(SLEEP) {
    direction : input;
    capacitance : 0.002035;
  }

/*  pin(VDDG) {               */
/*    direction : input;      */
/*    capacitance : 0.002035; */
/*  }                         */

/* Do I need power level for pin VDD? */
  pin(VDD) {
    direction : output;
    capacitance : 0.001741;
/*    function : "(VDDG !SLEEP)"; */
    function : "(!SLEEP)";
    internal_power() {
      power_level : VDDG;
      related_pin : "SLEEP";
      rise_power(scalar) {
        values("0.000");
      }
      fall_power(scalar) {
        values("0.000");
      }
    }
    timing() {
      related_pin : "SLEEP";
      timing_sense : positive_unate;

/* Cell rise is not characterized */
      cell_rise(scalar) {
        values("0.000");
      }

/* Cell fall is not characterized */
      cell_fall(scalar) {
        values("0.000");
      }

/* rise_transition is not characterized */
      rise_transition(scalar) {
        values("0.000");
      }

/* fall_transition is not characterized */
      fall_transition(scalar) {
        values("0.000");
      }

/* SLEEP is 1 */
      steady_state_current_high(iv_ov_50) {
        index_1 ("0.0000, 0.1000, 0.2000, 0.3000, 0.4000, 0.5000, 0.6000, 0.6300, 0.6600, 0.6800, \
                  0.6900, 0.7000, 0.7100, 0.7200, 0.7300, 0.7400, 0.7500, 0.7600, 0.7700, 0.7800, \
                  0.7900, 0.8000, 0.8100, 0.8200, 0.8300, 0.8400, 0.8500, 0.8600, 0.8700, 0.8800, \
                  0.8900, 0.9000, 0.9100, 0.9200, 0.9300, 0.9400, 0.9500, 0.9600, 0.9700, 0.9800, \
                  0.9900, 1.0000, 1.0100, 1.0200, 1.0300, 1.0400, 1.0500, 1.0600, 1.0700, 1.0800");
        values ("-0.0050, -0.0049, -0.0048, -0.0047, -0.0046, -0.0045, -0.0044, -0.0043, -0.0042, -0.0041, \
                 -0.0040, -0.0039, -0.0038, -0.0037, -0.0036, -0.0035, -0.0034, -0.0033, -0.0032, -0.0031, \
                 -0.0030, -0.0029, -0.0028, -0.0027, -0.0026, -0.0025, -0.0024, -0.0023, -0.0022, -0.0021, \
                 -0.0020, -0.0019, -0.0018, -0.0017, -0.0016, -0.0015, -0.0014, -0.0013, -0.0012, -0.0011, \
                 -0.0010, -0.0009, -0.0008, -0.0007, -0.0006, -0.0005, -0.0004, -0.0003, -0.0002,  0.0000");
      }

/* SLEEP is 0 */
      steady_state_current_low(iv_ov_50) {
        index_1 ("0.0000, 0.1000, 0.2000, 0.3000, 0.4000, 0.5000, 0.6000, 0.6300, 0.6600, 0.6800, \
                  0.6900, 0.7000, 0.7100, 0.7200, 0.7300, 0.7400, 0.7500, 0.7600, 0.7700, 0.7800, \
                  0.7900, 0.8000, 0.8100, 0.8200, 0.8300, 0.8400, 0.8500, 0.8600, 0.8700, 0.8800, \
                  0.8900, 0.9000, 0.9100, 0.9200, 0.9300, 0.9400, 0.9500, 0.9600, 0.9700, 0.9800, \
                  0.9900, 1.0000, 1.0100, 1.0200, 1.0300, 1.0400, 1.0500, 1.0600, 1.0700, 1.0800");
        values ("-50.0050, -49.0049, -48.0048, -47.0047, -46.0046, -45.0045, -44.0044, -43.0043, -42.0042, -41.0041, \
                 -40.0040, -39.0039, -38.0038, -37.0037, -36.0036, -35.0035, -34.0034, -33.0033, -32.0032, -31.0031, \
                 -30.0030, -29.0029, -28.0028, -27.0027, -26.0026, -25.0025, -24.0024, -23.0023, -22.0022, -21.0021, \
                 -20.0020, -19.0019, -18.0018, -17.0017, -16.0016, -15.0015, -14.0014, -13.0013, -12.0012, -11.0011, \
                 -0.9000, -0.8000, -0.7000, -0.6000, -0.5000, -0.4000, -0.3000, -0.2000, -0.1000,  0.0000");
      }
    }
  }
  pin(SLEEPOUT) {
    direction : output;
    capacitance : 0.0;
    function : "SLEEP";
    internal_power() {
      power_level : VDDG;
      related_pin : "SLEEP";
      rise_power(energy_template_7x7) {
        index_1 ("0.018, 0.028, 0.048, 0.09, 0.17, 0.334, 0.66");
        index_2 ("0.001165, 0.002796, 0.006291, 0.013048, 0.026795, 0.054289, 0.10951");
        values ( \
          "0.002231, 0.002255, 0.002274, 0.002255, 0.002146, 0.001875, 0.001305", \
          "0.002216, 0.002232, 0.002249, 0.002229, 0.002128, 0.001868, 0.001294", \
          "0.002225, 0.002231, 0.002237, 0.002218, 0.002122, 0.001864, 0.001287", \
          "0.002320, 0.002313, 0.002301, 0.002274, 0.002177, 0.001925, 0.001344", \
          "0.002630, 0.002606, 0.002540, 0.002487, 0.002377, 0.002130, 0.001576", \
          "0.003383, 0.003322, 0.003274, 0.003162, 0.002996, 0.002735, 0.002164", \
          "0.005096, 0.004944, 0.004815, 0.004714, 0.004615, 0.004116, 0.003529");
      }
      fall_power(energy_template_7x7) {
        index_1 ("0.018, 0.028, 0.048, 0.09, 0.17, 0.334, 0.66");
        index_2 ("0.001165, 0.002796, 0.006291, 0.013048, 0.026795, 0.054289, 0.10951");
        values ( \
          "0.003343, 0.003435, 0.003551, 0.003625, 0.003661, 0.003677, 0.003685", \
          "0.003330, 0.003421, 0.003535, 0.003610, 0.003647, 0.003664, 0.003674", \
          "0.003341, 0.003426, 0.003535, 0.003613, 0.003650, 0.003670, 0.003680", \
          "0.003470, 0.003526, 0.003627, 0.003687, 0.003721, 0.003741, 0.003755", \
          "0.003880, 0.003822, 0.003878, 0.003933, 0.003949, 0.003969, 0.003977", \
          "0.004872, 0.004742, 0.004611, 0.004541, 0.004514, 0.004510, 0.004518", \
          "0.006596, 0.006371, 0.006129, 0.005960, 0.005860, 0.005804, 0.005779");
      }
    }
    internal_power() {
      power_level : VSSG;
      related_pin : "SLEEP";
      rise_power(energy_template_7x7) {
        index_1 ("0.018, 0.028, 0.048, 0.09, 0.17, 0.334, 0.66");
        index_2 ("0.001165, 0.002796, 0.006291, 0.013048, 0.026795, 0.054289, 0.10951");
        values ( \
          "0.002231, 0.002255, 0.002274, 0.002255, 0.002146, 0.001875, 0.001305", \
          "0.002216, 0.002232, 0.002249, 0.002229, 0.002128, 0.001868, 0.001294", \
          "0.002225, 0.002231, 0.002237, 0.002218, 0.002122, 0.001864, 0.001287", \
          "0.002320, 0.002313, 0.002301, 0.002274, 0.002177, 0.001925, 0.001344", \
          "0.002630, 0.002606, 0.002540, 0.002487, 0.002377, 0.002130, 0.001576", \
          "0.003383, 0.003322, 0.003274, 0.003162, 0.002996, 0.002735, 0.002164", \
          "0.005096, 0.004944, 0.004815, 0.004714, 0.004615, 0.004116, 0.003529");
      }
      fall_power(energy_template_7x7) {
        index_1 ("0.018, 0.028, 0.048, 0.09, 0.17, 0.334, 0.66");
        index_2 ("0.001165, 0.002796, 0.006291, 0.013048, 0.026795, 0.054289, 0.10951");
        values ( \
          "0.003343, 0.003435, 0.003551, 0.003625, 0.003661, 0.003677, 0.003685", \
          "0.003330, 0.003421, 0.003535, 0.003610, 0.003647, 0.003664, 0.003674", \
          "0.003341, 0.003426, 0.003535, 0.003613, 0.003650, 0.003670, 0.003680", \
          "0.003470, 0.003526, 0.003627, 0.003687, 0.003721, 0.003741, 0.003755", \
          "0.003880, 0.003822, 0.003878, 0.003933, 0.003949, 0.003969, 0.003977", \
          "0.004872, 0.004742, 0.004611, 0.004541, 0.004514, 0.004510, 0.004518", \
          "0.006596, 0.006371, 0.006129, 0.005960, 0.005860, 0.005804, 0.005779");
      }
    }
    timing() {
      related_pin : "SLEEP";
      timing_sense : positive_unate;
      cell_rise(delay_template_7x7) {
        index_1 ("0.018, 0.028, 0.048, 0.09, 0.17, 0.334, 0.66");
        index_2 ("0.001165, 0.002796, 0.006291, 0.013048, 0.026795, 0.054289, 0.10951");
        values ( \
          "0.028520, 0.033232, 0.042725, 0.060557, 0.096415, 0.167795, 0.311052", \
          "0.030755, 0.035440, 0.044912, 0.062743, 0.098613, 0.170096, 0.313365", \
          "0.034673, 0.039333, 0.048745, 0.066528, 0.102444, 0.173868, 0.317166", \
          "0.039812, 0.044620, 0.054104, 0.071840, 0.107649, 0.179064, 0.322334", \
          "0.044736, 0.049892, 0.059523, 0.077187, 0.112932, 0.184245, 0.327506", \
          "0.047322, 0.053281, 0.063762, 0.081558, 0.117046, 0.188335, 0.331408", \
          "0.042023, 0.048896, 0.061163, 0.080471, 0.116209, 0.187383, 0.330440");
      }
      rise_transition(delay_template_7x7) {
        index_1 ("0.018, 0.028, 0.048, 0.09, 0.17, 0.334, 0.66");
        index_2 ("0.001165, 0.002796, 0.006291, 0.013048, 0.026795, 0.054289, 0.10951");
        values ( \
          "0.016612, 0.023951, 0.040337, 0.072889, 0.139561, 0.273002, 0.540978", \
          "0.016662, 0.023969, 0.040344, 0.072888, 0.139548, 0.273090, 0.541194", \
          "0.017190, 0.024251, 0.040415, 0.072888, 0.139618, 0.273018, 0.540868", \
          "0.019095, 0.025682, 0.041219, 0.073090, 0.139562, 0.272982, 0.540782", \
          "0.022573, 0.028484, 0.042692, 0.073853, 0.139918, 0.272924, 0.541042", \
          "0.028667, 0.034643, 0.047163, 0.075711, 0.140751, 0.273702, 0.540834", \
          "0.038366, 0.044926, 0.057612, 0.082514, 0.143882, 0.275138, 0.542110");
      }
      cell_fall(delay_template_7x7) {
        index_1 ("0.018, 0.028, 0.048, 0.09, 0.17, 0.334, 0.66");
        index_2 ("0.001165, 0.002796, 0.006291, 0.013048, 0.026795, 0.054289, 0.10951");
        values ( \
          "0.041322, 0.045394, 0.052591, 0.064364, 0.085784, 0.126748, 0.208391", \
          "0.043830, 0.047877, 0.055067, 0.066840, 0.088227, 0.129226, 0.210881", \
          "0.049216, 0.053249, 0.060436, 0.072216, 0.093678, 0.134640, 0.216291", \
          "0.060396, 0.064425, 0.071622, 0.083430, 0.104835, 0.145747, 0.227391", \
          "0.076921, 0.081336, 0.089112, 0.101369, 0.123034, 0.163946, 0.245480", \
          "0.102624, 0.107483, 0.116049, 0.129248, 0.151706, 0.193032, 0.274474", \
          "0.143637, 0.149106, 0.158896, 0.173814, 0.197867, 0.240037, 0.321709");
      }
      fall_transition(delay_template_7x7) {
        index_1 ("0.018, 0.028, 0.048, 0.09, 0.17, 0.334, 0.66");
        index_2 ("0.001165, 0.002796, 0.006291, 0.013048, 0.026795, 0.054289, 0.10951");
        values ( \
          "0.017614, 0.021800, 0.030159, 0.046233, 0.079956, 0.150550, 0.295006", \
          "0.017625, 0.021814, 0.030168, 0.046239, 0.079970, 0.150550, 0.295026", \
          "0.017667, 0.021852, 0.030195, 0.046246, 0.079959, 0.150551, 0.295012", \
          "0.018840, 0.022745, 0.030840, 0.046596, 0.080088, 0.150581, 0.295022", \
          "0.023244, 0.027054, 0.034621, 0.049352, 0.081331, 0.150863, 0.295230", \
          "0.029702, 0.033467, 0.040848, 0.054671, 0.085153, 0.152738, 0.295334", \
          "0.039734, 0.043491, 0.051321, 0.064721, 0.092723, 0.156989, 0.297806");
      }
    }
    max_capacitance : 0.109510;
  }
  cell_leakage_power : 7599.710000;
  leakage_power() {
    power_level : VDDG;
    when :"!SLEEP";
    value : 7599.710000;
  }
  leakage_power() {
    power_level : VDDG;
    when :"SLEEP";
    value : 6665.630000;
  }
  leakage_power() {
    power_level : VSSG;
    when :"!SLEEP";
    value : 7599.710000;
  }
  leakage_power() {
    power_level : VSSG;
    when :"SLEEP";
    value : 6665.630000;
  }
} /* end cell */
cell (HEAD32DM) { 
  cell_footprint : headd;
  area : 5.883500;

/*  pin(A) {                  */
/*    direction : input;      */
/*    capacitance : 0.001356; */
/*  }                         */

  pin(SLEEP) {
    direction : input;
    capacitance : 0.002035;
  }

/*  pin(VDDG) {               */
/*    direction : input;      */
/*    capacitance : 0.002035; */
/*  }                         */

/* Do I need power level for pin VDD? */
  pin(VDD) {
    direction : output;
    capacitance : 0.001741;
/*    function : "(VDDG !SLEEP)"; */
    function : "(!SLEEP)";
    internal_power() {
      power_level : VDDG;
      related_pin : "SLEEP";
      rise_power(scalar) {
        values("0.000");
      }
      fall_power(scalar) {
        values("0.000");
      }
    }
    timing() {
      related_pin : "SLEEP";
      timing_sense : positive_unate;

/* Cell rise is not characterized */
      cell_rise(scalar) {
        values("0.000");
      }

/* Cell fall is not characterized */
      cell_fall(scalar) {
        values("0.000");
      }

/* rise_transition is not characterized */
      rise_transition(scalar) {
        values("0.000");
      }

/* fall_transition is not characterized */
      fall_transition(scalar) {
        values("0.000");
      }

/* SLEEP is 1 */
      steady_state_current_high(iv_ov_50) {
        index_1 ("0.0000, 0.1000, 0.2000, 0.3000, 0.4000, 0.5000, 0.6000, 0.6300, 0.6600, 0.6800, \
                  0.6900, 0.7000, 0.7100, 0.7200, 0.7300, 0.7400, 0.7500, 0.7600, 0.7700, 0.7800, \
                  0.7900, 0.8000, 0.8100, 0.8200, 0.8300, 0.8400, 0.8500, 0.8600, 0.8700, 0.8800, \
                  0.8900, 0.9000, 0.9100, 0.9200, 0.9300, 0.9400, 0.9500, 0.9600, 0.9700, 0.9800, \
                  0.9900, 1.0000, 1.0100, 1.0200, 1.0300, 1.0400, 1.0500, 1.0600, 1.0700, 1.0800");
        values ("-0.0050, -0.0049, -0.0048, -0.0047, -0.0046, -0.0045, -0.0044, -0.0043, -0.0042, -0.0041, \
                 -0.0040, -0.0039, -0.0038, -0.0037, -0.0036, -0.0035, -0.0034, -0.0033, -0.0032, -0.0031, \
                 -0.0030, -0.0029, -0.0028, -0.0027, -0.0026, -0.0025, -0.0024, -0.0023, -0.0022, -0.0021, \
                 -0.0020, -0.0019, -0.0018, -0.0017, -0.0016, -0.0015, -0.0014, -0.0013, -0.0012, -0.0011, \
                 -0.0010, -0.0009, -0.0008, -0.0007, -0.0006, -0.0005, -0.0004, -0.0003, -0.0002,  0.0000");
      }

/* SLEEP is 0 */
      steady_state_current_low(iv_ov_50) {
        index_1 ("0.0000, 0.1000, 0.2000, 0.3000, 0.4000, 0.5000, 0.6000, 0.6300, 0.6600, 0.6800, \
                  0.6900, 0.7000, 0.7100, 0.7200, 0.7300, 0.7400, 0.7500, 0.7600, 0.7700, 0.7800, \
                  0.7900, 0.8000, 0.8100, 0.8200, 0.8300, 0.8400, 0.8500, 0.8600, 0.8700, 0.8800, \
                  0.8900, 0.9000, 0.9100, 0.9200, 0.9300, 0.9400, 0.9500, 0.9600, 0.9700, 0.9800, \
                  0.9900, 1.0000, 1.0100, 1.0200, 1.0300, 1.0400, 1.0500, 1.0600, 1.0700, 1.0800");
        values ("-50.0050, -49.0049, -48.0048, -47.0047, -46.0046, -45.0045, -44.0044, -43.0043, -42.0042, -41.0041, \
                 -40.0040, -39.0039, -38.0038, -37.0037, -36.0036, -35.0035, -34.0034, -33.0033, -32.0032, -31.0031, \
                 -30.0030, -29.0029, -28.0028, -27.0027, -26.0026, -25.0025, -24.0024, -23.0023, -22.0022, -21.0021, \
                 -20.0020, -19.0019, -18.0018, -17.0017, -16.0016, -15.0015, -14.0014, -13.0013, -12.0012, -11.0011, \
                 -0.9000, -0.8000, -0.7000, -0.6000, -0.5000, -0.4000, -0.3000, -0.2000, -0.1000,  0.0000");
      }
    }
  }
  pin(SLEEPOUT) {
    direction : output;
    capacitance : 0.0;
    function : "SLEEP";
    internal_power() {
      power_level : VDDG;
      related_pin : "SLEEP";
      rise_power(energy_template_7x7) {
        index_1 ("0.018, 0.028, 0.048, 0.09, 0.17, 0.334, 0.66");
        index_2 ("0.001165, 0.002796, 0.006291, 0.013048, 0.026795, 0.054289, 0.10951");
        values ( \
          "0.002231, 0.002255, 0.002274, 0.002255, 0.002146, 0.001875, 0.001305", \
          "0.002216, 0.002232, 0.002249, 0.002229, 0.002128, 0.001868, 0.001294", \
          "0.002225, 0.002231, 0.002237, 0.002218, 0.002122, 0.001864, 0.001287", \
          "0.002320, 0.002313, 0.002301, 0.002274, 0.002177, 0.001925, 0.001344", \
          "0.002630, 0.002606, 0.002540, 0.002487, 0.002377, 0.002130, 0.001576", \
          "0.003383, 0.003322, 0.003274, 0.003162, 0.002996, 0.002735, 0.002164", \
          "0.005096, 0.004944, 0.004815, 0.004714, 0.004615, 0.004116, 0.003529");
      }
      fall_power(energy_template_7x7) {
        index_1 ("0.018, 0.028, 0.048, 0.09, 0.17, 0.334, 0.66");
        index_2 ("0.001165, 0.002796, 0.006291, 0.013048, 0.026795, 0.054289, 0.10951");
        values ( \
          "0.003343, 0.003435, 0.003551, 0.003625, 0.003661, 0.003677, 0.003685", \
          "0.003330, 0.003421, 0.003535, 0.003610, 0.003647, 0.003664, 0.003674", \
          "0.003341, 0.003426, 0.003535, 0.003613, 0.003650, 0.003670, 0.003680", \
          "0.003470, 0.003526, 0.003627, 0.003687, 0.003721, 0.003741, 0.003755", \
          "0.003880, 0.003822, 0.003878, 0.003933, 0.003949, 0.003969, 0.003977", \
          "0.004872, 0.004742, 0.004611, 0.004541, 0.004514, 0.004510, 0.004518", \
          "0.006596, 0.006371, 0.006129, 0.005960, 0.005860, 0.005804, 0.005779");
      }
    }
    internal_power() {
      power_level : VSSG;
      related_pin : "SLEEP";
      rise_power(energy_template_7x7) {
        index_1 ("0.018, 0.028, 0.048, 0.09, 0.17, 0.334, 0.66");
        index_2 ("0.001165, 0.002796, 0.006291, 0.013048, 0.026795, 0.054289, 0.10951");
        values ( \
          "0.002231, 0.002255, 0.002274, 0.002255, 0.002146, 0.001875, 0.001305", \
          "0.002216, 0.002232, 0.002249, 0.002229, 0.002128, 0.001868, 0.001294", \
          "0.002225, 0.002231, 0.002237, 0.002218, 0.002122, 0.001864, 0.001287", \
          "0.002320, 0.002313, 0.002301, 0.002274, 0.002177, 0.001925, 0.001344", \
          "0.002630, 0.002606, 0.002540, 0.002487, 0.002377, 0.002130, 0.001576", \
          "0.003383, 0.003322, 0.003274, 0.003162, 0.002996, 0.002735, 0.002164", \
          "0.005096, 0.004944, 0.004815, 0.004714, 0.004615, 0.004116, 0.003529");
      }
      fall_power(energy_template_7x7) {
        index_1 ("0.018, 0.028, 0.048, 0.09, 0.17, 0.334, 0.66");
        index_2 ("0.001165, 0.002796, 0.006291, 0.013048, 0.026795, 0.054289, 0.10951");
        values ( \
          "0.003343, 0.003435, 0.003551, 0.003625, 0.003661, 0.003677, 0.003685", \
          "0.003330, 0.003421, 0.003535, 0.003610, 0.003647, 0.003664, 0.003674", \
          "0.003341, 0.003426, 0.003535, 0.003613, 0.003650, 0.003670, 0.003680", \
          "0.003470, 0.003526, 0.003627, 0.003687, 0.003721, 0.003741, 0.003755", \
          "0.003880, 0.003822, 0.003878, 0.003933, 0.003949, 0.003969, 0.003977", \
          "0.004872, 0.004742, 0.004611, 0.004541, 0.004514, 0.004510, 0.004518", \
          "0.006596, 0.006371, 0.006129, 0.005960, 0.005860, 0.005804, 0.005779");
      }
    }
    timing() {
      related_pin : "SLEEP";
      timing_sense : positive_unate;
      cell_rise(delay_template_7x7) {
        index_1 ("0.018, 0.028, 0.048, 0.09, 0.17, 0.334, 0.66");
        index_2 ("0.001165, 0.002796, 0.006291, 0.013048, 0.026795, 0.054289, 0.10951");
        values ( \
          "0.028520, 0.033232, 0.042725, 0.060557, 0.096415, 0.167795, 0.311052", \
          "0.030755, 0.035440, 0.044912, 0.062743, 0.098613, 0.170096, 0.313365", \
          "0.034673, 0.039333, 0.048745, 0.066528, 0.102444, 0.173868, 0.317166", \
          "0.039812, 0.044620, 0.054104, 0.071840, 0.107649, 0.179064, 0.322334", \
          "0.044736, 0.049892, 0.059523, 0.077187, 0.112932, 0.184245, 0.327506", \
          "0.047322, 0.053281, 0.063762, 0.081558, 0.117046, 0.188335, 0.331408", \
          "0.042023, 0.048896, 0.061163, 0.080471, 0.116209, 0.187383, 0.330440");
      }
      rise_transition(delay_template_7x7) {
        index_1 ("0.018, 0.028, 0.048, 0.09, 0.17, 0.334, 0.66");
        index_2 ("0.001165, 0.002796, 0.006291, 0.013048, 0.026795, 0.054289, 0.10951");
        values ( \
          "0.016612, 0.023951, 0.040337, 0.072889, 0.139561, 0.273002, 0.540978", \
          "0.016662, 0.023969, 0.040344, 0.072888, 0.139548, 0.273090, 0.541194", \
          "0.017190, 0.024251, 0.040415, 0.072888, 0.139618, 0.273018, 0.540868", \
          "0.019095, 0.025682, 0.041219, 0.073090, 0.139562, 0.272982, 0.540782", \
          "0.022573, 0.028484, 0.042692, 0.073853, 0.139918, 0.272924, 0.541042", \
          "0.028667, 0.034643, 0.047163, 0.075711, 0.140751, 0.273702, 0.540834", \
          "0.038366, 0.044926, 0.057612, 0.082514, 0.143882, 0.275138, 0.542110");
      }
      cell_fall(delay_template_7x7) {
        index_1 ("0.018, 0.028, 0.048, 0.09, 0.17, 0.334, 0.66");
        index_2 ("0.001165, 0.002796, 0.006291, 0.013048, 0.026795, 0.054289, 0.10951");
        values ( \
          "0.041322, 0.045394, 0.052591, 0.064364, 0.085784, 0.126748, 0.208391", \
          "0.043830, 0.047877, 0.055067, 0.066840, 0.088227, 0.129226, 0.210881", \
          "0.049216, 0.053249, 0.060436, 0.072216, 0.093678, 0.134640, 0.216291", \
          "0.060396, 0.064425, 0.071622, 0.083430, 0.104835, 0.145747, 0.227391", \
          "0.076921, 0.081336, 0.089112, 0.101369, 0.123034, 0.163946, 0.245480", \
          "0.102624, 0.107483, 0.116049, 0.129248, 0.151706, 0.193032, 0.274474", \
          "0.143637, 0.149106, 0.158896, 0.173814, 0.197867, 0.240037, 0.321709");
      }
      fall_transition(delay_template_7x7) {
        index_1 ("0.018, 0.028, 0.048, 0.09, 0.17, 0.334, 0.66");
        index_2 ("0.001165, 0.002796, 0.006291, 0.013048, 0.026795, 0.054289, 0.10951");
        values ( \
          "0.017614, 0.021800, 0.030159, 0.046233, 0.079956, 0.150550, 0.295006", \
          "0.017625, 0.021814, 0.030168, 0.046239, 0.079970, 0.150550, 0.295026", \
          "0.017667, 0.021852, 0.030195, 0.046246, 0.079959, 0.150551, 0.295012", \
          "0.018840, 0.022745, 0.030840, 0.046596, 0.080088, 0.150581, 0.295022", \
          "0.023244, 0.027054, 0.034621, 0.049352, 0.081331, 0.150863, 0.295230", \
          "0.029702, 0.033467, 0.040848, 0.054671, 0.085153, 0.152738, 0.295334", \
          "0.039734, 0.043491, 0.051321, 0.064721, 0.092723, 0.156989, 0.297806");
      }
    }
    max_capacitance : 0.109510;
  }
  cell_leakage_power : 7599.710000;
  leakage_power() {
    power_level : VDDG;
    when :"!SLEEP";
    value : 7599.710000;
  }
  leakage_power() {
    power_level : VDDG;
    when :"SLEEP";
    value : 6665.630000;
  }
  leakage_power() {
    power_level : VSSG;
    when :"!SLEEP";
    value : 7599.710000;
  }
  leakage_power() {
    power_level : VSSG;
    when :"SLEEP";
    value : 6665.630000;
  }
} /* end cell */
/* 
 * Copyright (c) 2005 Artisan Components, Inc.  All Rights Reserved.
 * 
 * CONFIDENTIAL AND PROPRIETARY SOFTWARE/DATA OF ARTISAN COMPONENTS, INC.
 * 
 * This file has been provided pursuant to a License Agreement containing
 * restrictions on its use.  This file contains valuable trade secrets and
 * proprietary information of Artisan Components, Inc., and is protected by
 * U.S. and international laws and/or treaties.
 * 
 * The copyright notice(s) in this file does not indicate actual or intended
 * publication of this file.
 * 
 * artix(v4.38.20)-artichar(v3.68.59)-syntech(1.63.2.13)
 *
 * process (ss), voltage (0.9v), temp (125)
 * 
 * com1_ss_h_l/DRFFX2/ - Wed Jun 22 12:27:09 2005
 */
cell (DRFFX2) { 
  cell_footprint : drff;
  area : 15.523200;
  pin(RET) {
    direction : input;
    capacitance : 0.001033;
    internal_power() {
      power_level : VDD;
      rise_power(passive_energy_template_1x7) {
        index_1 ("0.032, 0.048, 0.08, 0.14, 0.264, 0.512, 1");
        values ("0.002699, 0.002694, 0.002689, 0.002688, 0.002720, 0.002863, 0.003272");
      }
      fall_power(passive_energy_template_1x7) {
        index_1 ("0.032, 0.048, 0.08, 0.14, 0.264, 0.512, 1");
        values ("0.003657, 0.003652, 0.003647, 0.003645, 0.003671, 0.003808, 0.004220");
      }
    }
    internal_power() {
      power_level : VDDG;
      rise_power(passive_energy_template_1x7) {
        index_1 ("0.032, 0.048, 0.08, 0.14, 0.264, 0.512, 1");
        values ("0.002699, 0.002694, 0.002689, 0.002688, 0.002720, 0.002863, 0.003272");
      }
      fall_power(passive_energy_template_1x7) {
        index_1 ("0.032, 0.048, 0.08, 0.14, 0.264, 0.512, 1");
        values ("0.003657, 0.003652, 0.003647, 0.003645, 0.003671, 0.003808, 0.004220");
      }
    }
    internal_power() {
      power_level : VSSG;
      rise_power(passive_energy_template_1x7) {
        index_1 ("0.032, 0.048, 0.08, 0.14, 0.264, 0.512, 1");
        values ("0.002699, 0.002694, 0.002689, 0.002688, 0.002720, 0.002863, 0.003272");
      }
      fall_power(passive_energy_template_1x7) {
        index_1 ("0.032, 0.048, 0.08, 0.14, 0.264, 0.512, 1");
        values ("0.003657, 0.003652, 0.003647, 0.003645, 0.003671, 0.003808, 0.004220");
      }
    }
    timing() {
      related_pin : "CK";
      timing_type : setup_rising;
      rise_constraint(setup_template_3x3) {
        index_1 ("0.032, 0.264, 1");
        index_2 ("0.032, 0.264, 0.512");
        values ( \
          "0.054688, 0.019531, 0.000000", \
          "0.097656, 0.058594, 0.035156", \
          "0.156250, 0.109375, 0.082031");
      }
      fall_constraint(setup_template_3x3) {
        index_1 ("0.032, 0.264, 1");
        index_2 ("0.032, 0.264, 0.512");
        values ( \
          "0.109375, 0.046875, 0.003906", \
          "0.156250, 0.093750, 0.050781", \
          "0.261719, 0.199219, 0.156250");
      }
    }
    timing() {
      related_pin : "CK";
      timing_type : hold_rising;
      rise_constraint(hold_template_3x3) {
        index_1 ("0.032, 0.264, 1");
        index_2 ("0.032, 0.264, 0.512");
        values ( \
          "-0.035156, -0.003906, 0.015625", \
          "-0.074219, -0.039062, -0.019531", \
          "-0.121094, -0.082031, -0.062500");
      }
      fall_constraint(hold_template_3x3) {
        index_1 ("0.032, 0.264, 1");
        index_2 ("0.032, 0.264, 0.512");
        values ( \
          "-0.031250, 0.015625, 0.050781", \
          "-0.078125, -0.027344, 0.007812", \
          "-0.179687, -0.125000, -0.089844");
      }
    }
    min_pulse_width_high : 0.001050; 
    min_pulse_width_low : 0.107642;
  }
  pin(D) {
    direction : input;
    capacitance : 0.001033;
    internal_power() {
      power_level : VDD;
      rise_power(passive_energy_template_1x7) {
        index_1 ("0.032, 0.048, 0.08, 0.14, 0.264, 0.512, 1");
        values ("0.002699, 0.002694, 0.002689, 0.002688, 0.002720, 0.002863, 0.003272");
      }
      fall_power(passive_energy_template_1x7) {
        index_1 ("0.032, 0.048, 0.08, 0.14, 0.264, 0.512, 1");
        values ("0.003657, 0.003652, 0.003647, 0.003645, 0.003671, 0.003808, 0.004220");
      }
    }
    internal_power() {
      power_level : VDDG;
      rise_power(passive_energy_template_1x7) {
        index_1 ("0.032, 0.048, 0.08, 0.14, 0.264, 0.512, 1");
        values ("0.002699, 0.002694, 0.002689, 0.002688, 0.002720, 0.002863, 0.003272");
      }
      fall_power(passive_energy_template_1x7) {
        index_1 ("0.032, 0.048, 0.08, 0.14, 0.264, 0.512, 1");
        values ("0.003657, 0.003652, 0.003647, 0.003645, 0.003671, 0.003808, 0.004220");
      }
    }
    internal_power() {
      power_level : VSSG;
      rise_power(passive_energy_template_1x7) {
        index_1 ("0.032, 0.048, 0.08, 0.14, 0.264, 0.512, 1");
        values ("0.002699, 0.002694, 0.002689, 0.002688, 0.002720, 0.002863, 0.003272");
      }
      fall_power(passive_energy_template_1x7) {
        index_1 ("0.032, 0.048, 0.08, 0.14, 0.264, 0.512, 1");
        values ("0.003657, 0.003652, 0.003647, 0.003645, 0.003671, 0.003808, 0.004220");
      }
    }
    timing() {
      related_pin : "CK";
      timing_type : setup_rising;
      rise_constraint(setup_template_3x3) {
        index_1 ("0.032, 0.264, 1");
        index_2 ("0.032, 0.264, 0.512");
        values ( \
          "0.054688, 0.019531, 0.000000", \
          "0.097656, 0.058594, 0.035156", \
          "0.156250, 0.109375, 0.082031");
      }
      fall_constraint(setup_template_3x3) {
        index_1 ("0.032, 0.264, 1");
        index_2 ("0.032, 0.264, 0.512");
        values ( \
          "0.109375, 0.046875, 0.003906", \
          "0.156250, 0.093750, 0.050781", \
          "0.261719, 0.199219, 0.156250");
      }
    }
    timing() {
      related_pin : "CK";
      timing_type : hold_rising;
      rise_constraint(hold_template_3x3) {
        index_1 ("0.032, 0.264, 1");
        index_2 ("0.032, 0.264, 0.512");
        values ( \
          "-0.035156, -0.003906, 0.015625", \
          "-0.074219, -0.039062, -0.019531", \
          "-0.121094, -0.082031, -0.062500");
      }
      fall_constraint(hold_template_3x3) {
        index_1 ("0.032, 0.264, 1");
        index_2 ("0.032, 0.264, 0.512");
        values ( \
          "-0.031250, 0.015625, 0.050781", \
          "-0.078125, -0.027344, 0.007812", \
          "-0.179687, -0.125000, -0.089844");
      }
    }
  }
  pin(CK) {
    direction : input;
    clock : true;
    capacitance : 0.001467;
    max_transition : 0.512000;
    internal_power() {
      power_level : VDD;
      when : "D";
      rise_power(passive_energy_template_1x7) {
        index_1 ("0.032, 0.048, 0.08, 0.14, 0.264, 0.512, 1");
        values ("0.003847, 0.003835, 0.003825, 0.003845, 0.003969, 0.004337, 0.005224");
      }
      fall_power(passive_energy_template_1x7) {
        index_1 ("0.032, 0.048, 0.08, 0.14, 0.264, 0.512, 1");
        values ("0.007714, 0.007704, 0.007693, 0.007705, 0.007817, 0.008178, 0.009075");
      }
    }
    internal_power() {
      power_level : VDD;
      when : "!D";
      rise_power(passive_energy_template_1x7) {
        index_1 ("0.032, 0.048, 0.08, 0.14, 0.264, 0.512, 1");
        values ("0.003671, 0.003659, 0.003648, 0.003664, 0.003789, 0.004161, 0.005053");
      }
      fall_power(passive_energy_template_1x7) {
        index_1 ("0.032, 0.048, 0.08, 0.14, 0.264, 0.512, 1");
        values ("0.008216, 0.008207, 0.008199, 0.008217, 0.008328, 0.008666, 0.009508");
      }
    }
    internal_power() {
      power_level : VDDG;
      when : "D";
      rise_power(passive_energy_template_1x7) {
        index_1 ("0.032, 0.048, 0.08, 0.14, 0.264, 0.512, 1");
        values ("0.003847, 0.003835, 0.003825, 0.003845, 0.003969, 0.004337, 0.005224");
      }
      fall_power(passive_energy_template_1x7) {
        index_1 ("0.032, 0.048, 0.08, 0.14, 0.264, 0.512, 1");
        values ("0.007714, 0.007704, 0.007693, 0.007705, 0.007817, 0.008178, 0.009075");
      }
    }
    internal_power() {
      power_level : VDDG;
      when : "!D";
      rise_power(passive_energy_template_1x7) {
        index_1 ("0.032, 0.048, 0.08, 0.14, 0.264, 0.512, 1");
        values ("0.003671, 0.003659, 0.003648, 0.003664, 0.003789, 0.004161, 0.005053");
      }
      fall_power(passive_energy_template_1x7) {
        index_1 ("0.032, 0.048, 0.08, 0.14, 0.264, 0.512, 1");
        values ("0.008216, 0.008207, 0.008199, 0.008217, 0.008328, 0.008666, 0.009508");
      }
    }
    internal_power() {
      power_level : VSSG;
      when : "D";
      rise_power(passive_energy_template_1x7) {
        index_1 ("0.032, 0.048, 0.08, 0.14, 0.264, 0.512, 1");
        values ("0.003847, 0.003835, 0.003825, 0.003845, 0.003969, 0.004337, 0.005224");
      }
      fall_power(passive_energy_template_1x7) {
        index_1 ("0.032, 0.048, 0.08, 0.14, 0.264, 0.512, 1");
        values ("0.007714, 0.007704, 0.007693, 0.007705, 0.007817, 0.008178, 0.009075");
      }
    }
    internal_power() {
      power_level : VSSG;
      when : "!D";
      rise_power(passive_energy_template_1x7) {
        index_1 ("0.032, 0.048, 0.08, 0.14, 0.264, 0.512, 1");
        values ("0.003671, 0.003659, 0.003648, 0.003664, 0.003789, 0.004161, 0.005053");
      }
      fall_power(passive_energy_template_1x7) {
        index_1 ("0.032, 0.048, 0.08, 0.14, 0.264, 0.512, 1");
        values ("0.008216, 0.008207, 0.008199, 0.008217, 0.008328, 0.008666, 0.009508");
      }
    }
    min_pulse_width_high : 0.136850;
    min_pulse_width_low : 0.107642;
  }
  ff(IQ,IQN) {
    clocked_on : "CK";
    next_state : "D";
  }
  pin(Q) {
    direction : output;
    capacitance : 0.0;
    function : "IQ";
    internal_power() {
      power_level : VDD;
      related_pin : "CK";
      equal_or_opposite_output : "QN";
      rise_power(energy_template_7x3x3) {
        index_1 ("0.032, 0.048, 0.08, 0.14, 0.264, 0.512, 1");
        index_2 ("0.001165, 0.013048, 0.10951");
        index_3 ("0.001165, 0.013048, 0.10951");
        values ( \
          "0.005528, 0.005867, 0.005983", "0.006003, 0.005979, 0.006165", "0.006762, 0.006754, 0.006822", \
          "0.005530, 0.005868, 0.005984", "0.006005, 0.005981, 0.006166", "0.006764, 0.006757, 0.006844", \
          "0.005535, 0.005872, 0.005987", "0.006012, 0.005987, 0.006170", "0.006770, 0.006764, 0.006833", \
          "0.005546, 0.005880, 0.005996", "0.006026, 0.006002, 0.006181", "0.006731, 0.006780, 0.006851", \
          "0.005566, 0.005903, 0.006013", "0.006050, 0.006023, 0.006201", "0.006814, 0.006811, 0.006881", \
          "0.005595, 0.005933, 0.006041", "0.006086, 0.006042, 0.006232", "0.006843, 0.006853, 0.006949", \
          "0.006053, 0.006037, 0.006086", "0.006259, 0.006247, 0.006286", "0.006905, 0.006811, 0.007001");
      }
      fall_power(energy_template_7x3x3) {
        index_1 ("0.032, 0.048, 0.08, 0.14, 0.264, 0.512, 1");
        index_2 ("0.001165, 0.013048, 0.10951");
        index_3 ("0.001165, 0.013048, 0.10951");
        values ( \
          "0.005576, 0.005828, 0.006632", "0.005555, 0.005754, 0.006555", "0.005710, 0.005894, 0.006532", \
          "0.005576, 0.005829, 0.006639", "0.005554, 0.005754, 0.006554", "0.005708, 0.005893, 0.006525", \
          "0.005573, 0.005827, 0.006638", "0.005551, 0.005751, 0.006553", "0.005703, 0.005890, 0.006553", \
          "0.005569, 0.005826, 0.006637", "0.005545, 0.005748, 0.006552", "0.005696, 0.005896, 0.006532", \
          "0.005580, 0.005841, 0.006648", "0.005546, 0.005753, 0.006555", "0.005699, 0.005889, 0.006550", \
          "0.005643, 0.005909, 0.006749", "0.005575, 0.005788, 0.006619", "0.005728, 0.005930, 0.006600", \
          "0.006012, 0.006068, 0.006931", "0.005828, 0.005929, 0.006740", "0.005816, 0.005997, 0.006720");
      }
    }
    internal_power() {
      power_level : VDDG;
      related_pin : "CK";
      equal_or_opposite_output : "QN";
      rise_power(energy_template_7x3x3) {
        index_1 ("0.032, 0.048, 0.08, 0.14, 0.264, 0.512, 1");
        index_2 ("0.001165, 0.013048, 0.10951");
        index_3 ("0.001165, 0.013048, 0.10951");
        values ( \
          "0.005528, 0.005867, 0.005983", "0.006003, 0.005979, 0.006165", "0.006762, 0.006754, 0.006822", \
          "0.005530, 0.005868, 0.005984", "0.006005, 0.005981, 0.006166", "0.006764, 0.006757, 0.006844", \
          "0.005535, 0.005872, 0.005987", "0.006012, 0.005987, 0.006170", "0.006770, 0.006764, 0.006833", \
          "0.005546, 0.005880, 0.005996", "0.006026, 0.006002, 0.006181", "0.006731, 0.006780, 0.006851", \
          "0.005566, 0.005903, 0.006013", "0.006050, 0.006023, 0.006201", "0.006814, 0.006811, 0.006881", \
          "0.005595, 0.005933, 0.006041", "0.006086, 0.006042, 0.006232", "0.006843, 0.006853, 0.006949", \
          "0.006053, 0.006037, 0.006086", "0.006259, 0.006247, 0.006286", "0.006905, 0.006811, 0.007001");
      }
      fall_power(energy_template_7x3x3) {
        index_1 ("0.032, 0.048, 0.08, 0.14, 0.264, 0.512, 1");
        index_2 ("0.001165, 0.013048, 0.10951");
        index_3 ("0.001165, 0.013048, 0.10951");
        values ( \
          "0.005576, 0.005828, 0.006632", "0.005555, 0.005754, 0.006555", "0.005710, 0.005894, 0.006532", \
          "0.005576, 0.005829, 0.006639", "0.005554, 0.005754, 0.006554", "0.005708, 0.005893, 0.006525", \
          "0.005573, 0.005827, 0.006638", "0.005551, 0.005751, 0.006553", "0.005703, 0.005890, 0.006553", \
          "0.005569, 0.005826, 0.006637", "0.005545, 0.005748, 0.006552", "0.005696, 0.005896, 0.006532", \
          "0.005580, 0.005841, 0.006648", "0.005546, 0.005753, 0.006555", "0.005699, 0.005889, 0.006550", \
          "0.005643, 0.005909, 0.006749", "0.005575, 0.005788, 0.006619", "0.005728, 0.005930, 0.006600", \
          "0.006012, 0.006068, 0.006931", "0.005828, 0.005929, 0.006740", "0.005816, 0.005997, 0.006720");
      }
    }
    internal_power() {
      power_level : VSSG;
      related_pin : "CK";
      equal_or_opposite_output : "QN";
      rise_power(energy_template_7x3x3) {
        index_1 ("0.032, 0.048, 0.08, 0.14, 0.264, 0.512, 1");
        index_2 ("0.001165, 0.013048, 0.10951");
        index_3 ("0.001165, 0.013048, 0.10951");
        values ( \
          "0.005528, 0.005867, 0.005983", "0.006003, 0.005979, 0.006165", "0.006762, 0.006754, 0.006822", \
          "0.005530, 0.005868, 0.005984", "0.006005, 0.005981, 0.006166", "0.006764, 0.006757, 0.006844", \
          "0.005535, 0.005872, 0.005987", "0.006012, 0.005987, 0.006170", "0.006770, 0.006764, 0.006833", \
          "0.005546, 0.005880, 0.005996", "0.006026, 0.006002, 0.006181", "0.006731, 0.006780, 0.006851", \
          "0.005566, 0.005903, 0.006013", "0.006050, 0.006023, 0.006201", "0.006814, 0.006811, 0.006881", \
          "0.005595, 0.005933, 0.006041", "0.006086, 0.006042, 0.006232", "0.006843, 0.006853, 0.006949", \
          "0.006053, 0.006037, 0.006086", "0.006259, 0.006247, 0.006286", "0.006905, 0.006811, 0.007001");
      }
      fall_power(energy_template_7x3x3) {
        index_1 ("0.032, 0.048, 0.08, 0.14, 0.264, 0.512, 1");
        index_2 ("0.001165, 0.013048, 0.10951");
        index_3 ("0.001165, 0.013048, 0.10951");
        values ( \
          "0.005576, 0.005828, 0.006632", "0.005555, 0.005754, 0.006555", "0.005710, 0.005894, 0.006532", \
          "0.005576, 0.005829, 0.006639", "0.005554, 0.005754, 0.006554", "0.005708, 0.005893, 0.006525", \
          "0.005573, 0.005827, 0.006638", "0.005551, 0.005751, 0.006553", "0.005703, 0.005890, 0.006553", \
          "0.005569, 0.005826, 0.006637", "0.005545, 0.005748, 0.006552", "0.005696, 0.005896, 0.006532", \
          "0.005580, 0.005841, 0.006648", "0.005546, 0.005753, 0.006555", "0.005699, 0.005889, 0.006550", \
          "0.005643, 0.005909, 0.006749", "0.005575, 0.005788, 0.006619", "0.005728, 0.005930, 0.006600", \
          "0.006012, 0.006068, 0.006931", "0.005828, 0.005929, 0.006740", "0.005816, 0.005997, 0.006720");
      }
    }
    timing() {
      related_pin : "CK";
      timing_type : rising_edge;
      timing_sense : non_unate;
      cell_rise(delay_template_7x7) {
        index_1 ("0.032, 0.048, 0.08, 0.14, 0.264, 0.512, 1");
        index_2 ("0.001165, 0.002796, 0.006291, 0.013048, 0.026795, 0.054289, 0.10951");
        values ( \
          "0.165583, 0.174215, 0.190219, 0.217859, 0.270976, 0.375374, 0.582980", \
          "0.169871, 0.178503, 0.194507, 0.222149, 0.275264, 0.379664, 0.587269", \
          "0.178709, 0.187336, 0.203341, 0.230984, 0.284098, 0.388512, 0.596102", \
          "0.195403, 0.204036, 0.220042, 0.247696, 0.300801, 0.405201, 0.612803", \
          "0.225181, 0.233817, 0.249829, 0.277481, 0.330601, 0.434996, 0.642612", \
          "0.266708, 0.275347, 0.291364, 0.319041, 0.372165, 0.476561, 0.684176", \
          "0.321231, 0.329854, 0.345885, 0.373597, 0.426745, 0.531158, 0.738680");
      }
      rise_transition(delay_template_7x7) {
        index_1 ("0.032, 0.048, 0.08, 0.14, 0.264, 0.512, 1");
        index_2 ("0.001165, 0.002796, 0.006291, 0.013048, 0.026795, 0.054289, 0.10951");
        values ( \
          "0.034657, 0.045259, 0.067749, 0.112660, 0.207472, 0.400006, 0.788548", \
          "0.034657, 0.045259, 0.067749, 0.112664, 0.207472, 0.399998, 0.787842", \
          "0.034658, 0.045260, 0.067750, 0.112664, 0.207472, 0.400020, 0.787834", \
          "0.034661, 0.045263, 0.067752, 0.112662, 0.207472, 0.400010, 0.787842", \
          "0.034687, 0.045285, 0.067769, 0.112673, 0.207474, 0.400014, 0.787814", \
          "0.034733, 0.045322, 0.067812, 0.112712, 0.207510, 0.400038, 0.788018", \
          "0.034801, 0.045382, 0.067891, 0.112796, 0.207574, 0.400180, 0.787942");
      }
      cell_fall(delay_template_7x7) {
        index_1 ("0.032, 0.048, 0.08, 0.14, 0.264, 0.512, 1");
        index_2 ("0.001165, 0.002796, 0.006291, 0.013048, 0.026795, 0.054289, 0.10951");
        values ( \
          "0.158115, 0.167007, 0.182515, 0.206741, 0.247223, 0.317080, 0.446464", \
          "0.162377, 0.171268, 0.186775, 0.210996, 0.251485, 0.321339, 0.450723", \
          "0.171055, 0.179957, 0.195454, 0.219678, 0.260164, 0.330010, 0.459403", \
          "0.187280, 0.196171, 0.211673, 0.235897, 0.276388, 0.346240, 0.475633", \
          "0.217007, 0.225900, 0.241405, 0.265645, 0.306139, 0.376001, 0.505396", \
          "0.260953, 0.269910, 0.285550, 0.309927, 0.350552, 0.420476, 0.549888", \
          "0.320960, 0.330161, 0.346118, 0.370910, 0.411848, 0.481867, 0.611297");
      }
      fall_transition(delay_template_7x7) {
        index_1 ("0.032, 0.048, 0.08, 0.14, 0.264, 0.512, 1");
        index_2 ("0.001165, 0.002796, 0.006291, 0.013048, 0.026795, 0.054289, 0.10951");
        values ( \
          "0.041743, 0.050415, 0.066772, 0.095367, 0.149200, 0.253986, 0.475466", \
          "0.041746, 0.050418, 0.066774, 0.095371, 0.149201, 0.253998, 0.475466", \
          "0.041751, 0.050411, 0.066759, 0.095371, 0.149203, 0.253976, 0.475466", \
          "0.041775, 0.050448, 0.066800, 0.095394, 0.149212, 0.254014, 0.475468", \
          "0.041975, 0.050635, 0.066962, 0.095507, 0.149271, 0.254170, 0.475472", \
          "0.043373, 0.051856, 0.068056, 0.096322, 0.149777, 0.254332, 0.475540", \
          "0.046440, 0.054716, 0.070600, 0.098316, 0.151043, 0.254884, 0.475332");
      }
    }
    max_capacitance : 0.109510;
  }
  pin(QN) {
    direction : output;
    capacitance : 0.0;
    function : "IQN";
    timing() {
      related_pin : "CK";
      timing_type : rising_edge;
      timing_sense : non_unate;
      cell_rise(delay_template_7x7) {
        index_1 ("0.032, 0.048, 0.08, 0.14, 0.264, 0.512, 1");
        index_2 ("0.001165, 0.002796, 0.006291, 0.013048, 0.026795, 0.054289, 0.10951");
        values ( \
          "0.235813, 0.244607, 0.260433, 0.287350, 0.339359, 0.442406, 0.649107", \
          "0.240070, 0.248867, 0.264694, 0.291594, 0.343625, 0.446670, 0.653372", \
          "0.248755, 0.257548, 0.273373, 0.300291, 0.352301, 0.455345, 0.662048", \
          "0.264974, 0.273770, 0.289587, 0.316493, 0.368525, 0.471570, 0.678276", \
          "0.294682, 0.303481, 0.319312, 0.346213, 0.398234, 0.501275, 0.707982", \
          "0.338978, 0.347827, 0.363657, 0.390577, 0.442589, 0.545641, 0.752347", \
          "0.400325, 0.409169, 0.425042, 0.451985, 0.503898, 0.606946, 0.813463");
      }
      rise_transition(delay_template_7x7) {
        index_1 ("0.032, 0.048, 0.08, 0.14, 0.264, 0.512, 1");
        index_2 ("0.001165, 0.002796, 0.006291, 0.013048, 0.026795, 0.054289, 0.10951");
        values ( \
          "0.038403, 0.047928, 0.068486, 0.111300, 0.204824, 0.396978, 0.784464", \
          "0.038353, 0.047928, 0.068487, 0.111300, 0.204830, 0.396984, 0.784464", \
          "0.038404, 0.047929, 0.068486, 0.111300, 0.204836, 0.397004, 0.784464", \
          "0.038404, 0.047932, 0.068474, 0.111283, 0.204830, 0.397104, 0.784464", \
          "0.038435, 0.047955, 0.068458, 0.111310, 0.204838, 0.397104, 0.784462", \
          "0.038556, 0.048088, 0.068561, 0.111332, 0.204902, 0.397012, 0.784458", \
          "0.038897, 0.048366, 0.068801, 0.111464, 0.204872, 0.397050, 0.784074");
      }
      cell_fall(delay_template_7x7) {
        index_1 ("0.032, 0.048, 0.08, 0.14, 0.264, 0.512, 1");
        index_2 ("0.001165, 0.002796, 0.006291, 0.013048, 0.026795, 0.054289, 0.10951");
        values ( \
          "0.244893, 0.252781, 0.266423, 0.287618, 0.323702, 0.389003, 0.516331", \
          "0.249182, 0.257070, 0.270713, 0.291847, 0.327983, 0.393292, 0.520619", \
          "0.258016, 0.265904, 0.279547, 0.300711, 0.336864, 0.402129, 0.529455", \
          "0.274722, 0.282611, 0.296250, 0.317400, 0.353535, 0.418833, 0.546159", \
          "0.304551, 0.312439, 0.326081, 0.347235, 0.383351, 0.448662, 0.575990", \
          "0.346202, 0.354101, 0.367731, 0.388867, 0.425001, 0.490315, 0.617637", \
          "0.400930, 0.408833, 0.422466, 0.443601, 0.479782, 0.545065, 0.672301");
      }
      fall_transition(delay_template_7x7) {
        index_1 ("0.032, 0.048, 0.08, 0.14, 0.264, 0.512, 1");
        index_2 ("0.001165, 0.002796, 0.006291, 0.013048, 0.026795, 0.054289, 0.10951");
        values ( \
          "0.037803, 0.045130, 0.059121, 0.084491, 0.135812, 0.244322, 0.471316", \
          "0.037809, 0.045129, 0.059121, 0.084385, 0.135830, 0.244322, 0.471318", \
          "0.037804, 0.045128, 0.059123, 0.084476, 0.136073, 0.244322, 0.471310", \
          "0.037827, 0.045127, 0.059124, 0.084446, 0.135795, 0.244058, 0.471324", \
          "0.037829, 0.045133, 0.059123, 0.084383, 0.135984, 0.244332, 0.471318", \
          "0.037832, 0.045130, 0.059144, 0.084432, 0.135976, 0.244136, 0.471344", \
          "0.037839, 0.045148, 0.059138, 0.084430, 0.136084, 0.244262, 0.471296");
      }
    }
    max_capacitance : 0.109510;
  }
  pin(RETO) {
    direction : output;
    capacitance : 0.0;
/*    function : "RET"; LC complains that function can only be IQ or IQN */
    function : "IQ";
    internal_power() {
      power_level : VDD;
      related_pin : "RET";
/*      equal_or_opposite_output : "QN"; */
      equal_or_opposite_output : "Q"; /* trying to fix compile error with this */
      rise_power(energy_template_7x3x3) {
        index_1 ("0.032, 0.048, 0.08, 0.14, 0.264, 0.512, 1");
        index_2 ("0.001165, 0.013048, 0.10951");
        index_3 ("0.001165, 0.013048, 0.10951");
        values ( \
          "0.005528, 0.005867, 0.005983", "0.006003, 0.005979, 0.006165", "0.006762, 0.006754, 0.006822", \
          "0.005530, 0.005868, 0.005984", "0.006005, 0.005981, 0.006166", "0.006764, 0.006757, 0.006844", \
          "0.005535, 0.005872, 0.005987", "0.006012, 0.005987, 0.006170", "0.006770, 0.006764, 0.006833", \
          "0.005546, 0.005880, 0.005996", "0.006026, 0.006002, 0.006181", "0.006731, 0.006780, 0.006851", \
          "0.005566, 0.005903, 0.006013", "0.006050, 0.006023, 0.006201", "0.006814, 0.006811, 0.006881", \
          "0.005595, 0.005933, 0.006041", "0.006086, 0.006042, 0.006232", "0.006843, 0.006853, 0.006949", \
          "0.006053, 0.006037, 0.006086", "0.006259, 0.006247, 0.006286", "0.006905, 0.006811, 0.007001");
      }
      fall_power(energy_template_7x3x3) {
        index_1 ("0.032, 0.048, 0.08, 0.14, 0.264, 0.512, 1");
        index_2 ("0.001165, 0.013048, 0.10951");
        index_3 ("0.001165, 0.013048, 0.10951");
        values ( \
          "0.005576, 0.005828, 0.006632", "0.005555, 0.005754, 0.006555", "0.005710, 0.005894, 0.006532", \
          "0.005576, 0.005829, 0.006639", "0.005554, 0.005754, 0.006554", "0.005708, 0.005893, 0.006525", \
          "0.005573, 0.005827, 0.006638", "0.005551, 0.005751, 0.006553", "0.005703, 0.005890, 0.006553", \
          "0.005569, 0.005826, 0.006637", "0.005545, 0.005748, 0.006552", "0.005696, 0.005896, 0.006532", \
          "0.005580, 0.005841, 0.006648", "0.005546, 0.005753, 0.006555", "0.005699, 0.005889, 0.006550", \
          "0.005643, 0.005909, 0.006749", "0.005575, 0.005788, 0.006619", "0.005728, 0.005930, 0.006600", \
          "0.006012, 0.006068, 0.006931", "0.005828, 0.005929, 0.006740", "0.005816, 0.005997, 0.006720");
      }
    }
    internal_power() {
      power_level : VDDG;
      related_pin : "RET";
/*       equal_or_opposite_output : "QN"; */
      equal_or_opposite_output : "Q"; /* trying to fix compile error with this */
      rise_power(energy_template_7x3x3) {
        index_1 ("0.032, 0.048, 0.08, 0.14, 0.264, 0.512, 1");
        index_2 ("0.001165, 0.013048, 0.10951");
        index_3 ("0.001165, 0.013048, 0.10951");
        values ( \
          "0.005528, 0.005867, 0.005983", "0.006003, 0.005979, 0.006165", "0.006762, 0.006754, 0.006822", \
          "0.005530, 0.005868, 0.005984", "0.006005, 0.005981, 0.006166", "0.006764, 0.006757, 0.006844", \
          "0.005535, 0.005872, 0.005987", "0.006012, 0.005987, 0.006170", "0.006770, 0.006764, 0.006833", \
          "0.005546, 0.005880, 0.005996", "0.006026, 0.006002, 0.006181", "0.006731, 0.006780, 0.006851", \
          "0.005566, 0.005903, 0.006013", "0.006050, 0.006023, 0.006201", "0.006814, 0.006811, 0.006881", \
          "0.005595, 0.005933, 0.006041", "0.006086, 0.006042, 0.006232", "0.006843, 0.006853, 0.006949", \
          "0.006053, 0.006037, 0.006086", "0.006259, 0.006247, 0.006286", "0.006905, 0.006811, 0.007001");
      }
      fall_power(energy_template_7x3x3) {
        index_1 ("0.032, 0.048, 0.08, 0.14, 0.264, 0.512, 1");
        index_2 ("0.001165, 0.013048, 0.10951");
        index_3 ("0.001165, 0.013048, 0.10951");
        values ( \
          "0.005576, 0.005828, 0.006632", "0.005555, 0.005754, 0.006555", "0.005710, 0.005894, 0.006532", \
          "0.005576, 0.005829, 0.006639", "0.005554, 0.005754, 0.006554", "0.005708, 0.005893, 0.006525", \
          "0.005573, 0.005827, 0.006638", "0.005551, 0.005751, 0.006553", "0.005703, 0.005890, 0.006553", \
          "0.005569, 0.005826, 0.006637", "0.005545, 0.005748, 0.006552", "0.005696, 0.005896, 0.006532", \
          "0.005580, 0.005841, 0.006648", "0.005546, 0.005753, 0.006555", "0.005699, 0.005889, 0.006550", \
          "0.005643, 0.005909, 0.006749", "0.005575, 0.005788, 0.006619", "0.005728, 0.005930, 0.006600", \
          "0.006012, 0.006068, 0.006931", "0.005828, 0.005929, 0.006740", "0.005816, 0.005997, 0.006720");
      }
    }
    internal_power() {
      power_level : VSSG;
      related_pin : "RET";
/*      equal_or_opposite_output : "QN"; */
      equal_or_opposite_output : "Q"; /* trying to fix compile error with this */
      rise_power(energy_template_7x3x3) {
        index_1 ("0.032, 0.048, 0.08, 0.14, 0.264, 0.512, 1");
        index_2 ("0.001165, 0.013048, 0.10951");
        index_3 ("0.001165, 0.013048, 0.10951");
        values ( \
          "0.005528, 0.005867, 0.005983", "0.006003, 0.005979, 0.006165", "0.006762, 0.006754, 0.006822", \
          "0.005530, 0.005868, 0.005984", "0.006005, 0.005981, 0.006166", "0.006764, 0.006757, 0.006844", \
          "0.005535, 0.005872, 0.005987", "0.006012, 0.005987, 0.006170", "0.006770, 0.006764, 0.006833", \
          "0.005546, 0.005880, 0.005996", "0.006026, 0.006002, 0.006181", "0.006731, 0.006780, 0.006851", \
          "0.005566, 0.005903, 0.006013", "0.006050, 0.006023, 0.006201", "0.006814, 0.006811, 0.006881", \
          "0.005595, 0.005933, 0.006041", "0.006086, 0.006042, 0.006232", "0.006843, 0.006853, 0.006949", \
          "0.006053, 0.006037, 0.006086", "0.006259, 0.006247, 0.006286", "0.006905, 0.006811, 0.007001");
      }
      fall_power(energy_template_7x3x3) {
        index_1 ("0.032, 0.048, 0.08, 0.14, 0.264, 0.512, 1");
        index_2 ("0.001165, 0.013048, 0.10951");
        index_3 ("0.001165, 0.013048, 0.10951");
        values ( \
          "0.005576, 0.005828, 0.006632", "0.005555, 0.005754, 0.006555", "0.005710, 0.005894, 0.006532", \
          "0.005576, 0.005829, 0.006639", "0.005554, 0.005754, 0.006554", "0.005708, 0.005893, 0.006525", \
          "0.005573, 0.005827, 0.006638", "0.005551, 0.005751, 0.006553", "0.005703, 0.005890, 0.006553", \
          "0.005569, 0.005826, 0.006637", "0.005545, 0.005748, 0.006552", "0.005696, 0.005896, 0.006532", \
          "0.005580, 0.005841, 0.006648", "0.005546, 0.005753, 0.006555", "0.005699, 0.005889, 0.006550", \
          "0.005643, 0.005909, 0.006749", "0.005575, 0.005788, 0.006619", "0.005728, 0.005930, 0.006600", \
          "0.006012, 0.006068, 0.006931", "0.005828, 0.005929, 0.006740", "0.005816, 0.005997, 0.006720");
      }
    }
    timing() {
      related_pin : "RET";
      timing_type : rising_edge;
      timing_sense : positive_unate;
      cell_rise(delay_template_7x7) {
        index_1 ("0.032, 0.048, 0.08, 0.14, 0.264, 0.512, 1");
        index_2 ("0.001165, 0.002796, 0.006291, 0.013048, 0.026795, 0.054289, 0.10951");
        values ( \
          "0.165583, 0.174215, 0.190219, 0.217859, 0.270976, 0.375374, 0.582980", \
          "0.169871, 0.178503, 0.194507, 0.222149, 0.275264, 0.379664, 0.587269", \
          "0.178709, 0.187336, 0.203341, 0.230984, 0.284098, 0.388512, 0.596102", \
          "0.195403, 0.204036, 0.220042, 0.247696, 0.300801, 0.405201, 0.612803", \
          "0.225181, 0.233817, 0.249829, 0.277481, 0.330601, 0.434996, 0.642612", \
          "0.266708, 0.275347, 0.291364, 0.319041, 0.372165, 0.476561, 0.684176", \
          "0.321231, 0.329854, 0.345885, 0.373597, 0.426745, 0.531158, 0.738680");
      }
      rise_transition(delay_template_7x7) {
        index_1 ("0.032, 0.048, 0.08, 0.14, 0.264, 0.512, 1");
        index_2 ("0.001165, 0.002796, 0.006291, 0.013048, 0.026795, 0.054289, 0.10951");
        values ( \
          "0.034657, 0.045259, 0.067749, 0.112660, 0.207472, 0.400006, 0.788548", \
          "0.034657, 0.045259, 0.067749, 0.112664, 0.207472, 0.399998, 0.787842", \
          "0.034658, 0.045260, 0.067750, 0.112664, 0.207472, 0.400020, 0.787834", \
          "0.034661, 0.045263, 0.067752, 0.112662, 0.207472, 0.400010, 0.787842", \
          "0.034687, 0.045285, 0.067769, 0.112673, 0.207474, 0.400014, 0.787814", \
          "0.034733, 0.045322, 0.067812, 0.112712, 0.207510, 0.400038, 0.788018", \
          "0.034801, 0.045382, 0.067891, 0.112796, 0.207574, 0.400180, 0.787942");
      }
      cell_fall(delay_template_7x7) {
        index_1 ("0.032, 0.048, 0.08, 0.14, 0.264, 0.512, 1");
        index_2 ("0.001165, 0.002796, 0.006291, 0.013048, 0.026795, 0.054289, 0.10951");
        values ( \
          "0.158115, 0.167007, 0.182515, 0.206741, 0.247223, 0.317080, 0.446464", \
          "0.162377, 0.171268, 0.186775, 0.210996, 0.251485, 0.321339, 0.450723", \
          "0.171055, 0.179957, 0.195454, 0.219678, 0.260164, 0.330010, 0.459403", \
          "0.187280, 0.196171, 0.211673, 0.235897, 0.276388, 0.346240, 0.475633", \
          "0.217007, 0.225900, 0.241405, 0.265645, 0.306139, 0.376001, 0.505396", \
          "0.260953, 0.269910, 0.285550, 0.309927, 0.350552, 0.420476, 0.549888", \
          "0.320960, 0.330161, 0.346118, 0.370910, 0.411848, 0.481867, 0.611297");
      }
      fall_transition(delay_template_7x7) {
        index_1 ("0.032, 0.048, 0.08, 0.14, 0.264, 0.512, 1");
        index_2 ("0.001165, 0.002796, 0.006291, 0.013048, 0.026795, 0.054289, 0.10951");
        values ( \
          "0.041743, 0.050415, 0.066772, 0.095367, 0.149200, 0.253986, 0.475466", \
          "0.041746, 0.050418, 0.066774, 0.095371, 0.149201, 0.253998, 0.475466", \
          "0.041751, 0.050411, 0.066759, 0.095371, 0.149203, 0.253976, 0.475466", \
          "0.041775, 0.050448, 0.066800, 0.095394, 0.149212, 0.254014, 0.475468", \
          "0.041975, 0.050635, 0.066962, 0.095507, 0.149271, 0.254170, 0.475472", \
          "0.043373, 0.051856, 0.068056, 0.096322, 0.149777, 0.254332, 0.475540", \
          "0.046440, 0.054716, 0.070600, 0.098316, 0.151043, 0.254884, 0.475332");
      }
    }
    max_capacitance : 0.109510;
  }
  /* don't need power level for cell_leakage_power? */
  /* can leakage power for RET include the state of an internal node? */
  /* Can I delete cell_leakage_power? */  /* or does power compiler need it */
  cell_leakage_power : 64487.610000;
  leakage_power() {
    power_level : VDDG;
    when :"RET";
    value : 82.690000;
  }
  leakage_power() {
    power_level : VSSG;
    when :"RET";
    value : 82.690000;
  }
  leakage_power() {
    power_level : VDD; /* you get compile error if you don't include for this power level */
    when :"RET";
    value : 82.690000;
  }
  leakage_power() {
    power_level : VDD;
    when :"!RET & !D & !CK & !Q & QN"
    value : 57882.690000;
  }
  leakage_power() {
    power_level : VDDG;
    when :"!RET & !D & !CK & !Q & QN";
    value : 57882.690000;
  }
  leakage_power() {
    power_level : VSSG;
    when :"!RET & !D & !CK & !Q & QN";
    value : 57882.690000;
  }
  leakage_power() {
    power_level : VDD;
    when :"!RET & !D & !CK & Q & !QN";
    value : 61647.300000;
  }
  leakage_power() {
    power_level : VDDG;
    when :"!RET & !D & !CK & Q & !QN";
    value : 61647.300000;
  }
  leakage_power() {
    power_level : VSSG;
    when :"!RET & !D & !CK & Q & !QN";
    value : 61647.300000;
  }
  leakage_power() {
    power_level : VDD;
    when :"!RET & !D & CK & !Q & QN";
    value : 59649.210000;
  }
  leakage_power() {
    power_level : VDDG;
    when :"!RET & !D & CK & !Q & QN";
    value : 59649.210000;
  }
  leakage_power() {
    power_level : VSSG;
    when :"!RET & !D & CK & !Q & QN";
    value : 59649.210000;
  }
  leakage_power() {
    power_level : VDD;
    when :"!RET & !D & CK & Q & !QN";
    value : 59349.420000;
  }
  leakage_power() {
    power_level : VDDG;
    when :"!RET & !D & CK & Q & !QN";
    value : 59349.420000;
  }
  leakage_power() {
    power_level : VSSG;
    when :"!RET & !D & CK & Q & !QN";
    value : 59349.420000;
  }
  leakage_power() {
    power_level : VDD;
    when :"!RET & D & !CK & !Q & QN";
    value : 63908.100000;
  }
  leakage_power() {
    power_level : VDDG;
    when :"!RET & D & !CK & !Q & QN";
    value : 63908.100000;
  }
  leakage_power() {
    power_level : VSSG;
    when :"!RET & D & !CK & !Q & QN";
    value : 63908.100000;
  }
  leakage_power() {
    power_level : VDD;
    when :"!RET & D & !CK & Q & !QN";
    value : 55259.370000;
  }
  leakage_power() {
    power_level : VDDG;
    when :"!RET & D & !CK & Q & !QN";
    value : 55259.370000;
  }
  leakage_power() {
    power_level : VSSG;
    when :"!RET & D & !CK & Q & !QN";
    value : 55259.370000;
  }
  leakage_power() {
    power_level : VDD;
    when :"!RET & D & CK & !Q & QN";
    value : 64487.610000;
  }
  leakage_power() {
    power_level : VDDG;
    when :"!RET & D & CK & !Q & QN";
    value : 64487.610000;
  }
  leakage_power() {
    power_level : VSSG;
    when :"!RET & D & CK & !Q & QN";
    value : 64487.610000;
  }
  leakage_power() {
    power_level : VDD;
    when :"!RET & D & CK & Q & !QN";
    value : 57538.080000;
  }
  leakage_power() {
    power_level : VDDG;
    when :"!RET & D & CK & Q & !QN";
    value : 57538.080000;
  }
  leakage_power() {
    power_level : VSSG;
    when :"!RET & D & CK & Q & !QN";
    value : 57538.080000;
  }
}
}
