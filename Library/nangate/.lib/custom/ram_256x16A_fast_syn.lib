/*
 *      CONFIDENTIAL AND PROPRIETARY SOFTWARE/DATA OF ARTISAN COMPONENTS, INC.
 *      
 *      Copyright (c) 2003 Artisan Components, Inc.  All Rights Reserved.
 *      
 *      Use of this Software/Data is subject to the terms and conditions of
 *      the applicable license agreement between Artisan Components, Inc. and
 *      Taiwan Semiconductor Manufacturing Company Ltd..  In addition, this Software/Data
 *      is protected by copyright law and international treaties.
 *      
 *      The copyright notice(s) in this Software/Data does not indicate actual
 *      or intended publication of this Software/Data.
 *
 *      Synopsys model for Synchronous Single-Port Ram
 *
 *      Library Name:   USERLIB
 *      Instance Name:  ram_256X16A
 *      Words:          256
 *      Word Width:     16
 *      Mux:            8
 *      Pipeline:       No
 *      Process:        fast
 *      Delays:		min
 *
 *      Creation Date:  2003-10-27 19:57:47Z
 *      Version:        2002Q1V0
 *
 *      Verified With: Synopsys Design Compiler
 *
 *      Modeling Assumptions: This library contains a black box description
 *          for a memory element.  At the library level, a
 *          default_max_transition constraint is set to the maximum
 *          characterized input slew.  Each output has a max_capacitance
 *          constraint set to the highest characterized output load.  These two
 *          constraints force Design Compiler to synthesize circuits that
 *          operate within the characterization space.  The user can tighten
 *          these constraints, if desired.  When writing SDF from Design
 *          Compiler, use the version 2.1 option.  This ensures the SDF will
 *          annotate to simulation models provided with this generator.
 *
 *      Modeling Limitations: 
 *          Due to limitations of the .lib format, some data reduction was
 *          necessary.  When reducing data, minimum values were chosen for the
 *          fast case corner and maximum values were used for the typical and
 *          best case corners.  It is recommended that critical timing and
 *          setup and hold times be checked at all corners.
 *
 *      Known Bugs: None.
 *
 *      Known Work Arounds: N/A
 *
 */

library(ram_256x16_fast) {
	delay_model		: table_lookup;
	revision		: 1.1;	
	date			: "2003-10-27 19:57:47Z";
	comment			: "Confidential Information of Artisan Components, Inc.  Use subject to Artisan Components license. Copyright (c) 2003 Artisan Components, Inc.";
	time_unit		: "1ns";
	voltage_unit		: "1V";
	current_unit		: "1mA";
	leakage_power_unit	: "1mW";
	nom_process		: 1;
	nom_temperature		: -40.000;
	nom_voltage		: 1.320;
	capacitive_load_unit	 (1,pf);

	pulling_resistance_unit	        : "1kohm";

	/* additional header data */
	default_cell_leakage_power      : 0;
	default_fanout_load		: 1;
	default_inout_pin_cap		: 0.005;
	default_input_pin_cap		: 0.005;
	default_output_pin_cap		: 0.0;
	default_max_transition		: 0.750;

        /* default attributes */
        default_leakage_power_density : 0.0;
        slew_derate_from_library      : 1;
        slew_lower_threshold_pct_fall : 10.0;
        slew_upper_threshold_pct_fall : 90.0;
        slew_lower_threshold_pct_rise : 10.0;
        slew_upper_threshold_pct_rise : 90.0;
        input_threshold_pct_fall      : 50.0;
        input_threshold_pct_rise      : 50.0;
        output_threshold_pct_fall     : 50.0;
        output_threshold_pct_rise     : 50.0;

 	/* k-factors */
 	k_process_cell_fall             : 1;
 	k_process_cell_leakage_power    : 0;
 	k_process_cell_rise             : 1;
 	k_process_fall_transition       : 1;
 	k_process_hold_fall             : 1;
 	k_process_hold_rise             : 1;
 	k_process_internal_power        : 0;
 	k_process_min_pulse_width_high  : 1;
 	k_process_min_pulse_width_low   : 1;
 	k_process_pin_cap               : 0;
 	k_process_recovery_fall         : 1;
 	k_process_recovery_rise         : 1;
 	k_process_rise_transition       : 1;
 	k_process_setup_fall            : 1;
 	k_process_setup_rise            : 1;
 	k_process_wire_cap              : 0;
 	k_process_wire_res              : 0;
	k_temp_cell_fall		: 0.0;
	k_temp_cell_rise		: 0.0;
	k_temp_hold_fall                : 0.0;
	k_temp_hold_rise                : 0.0;
	k_temp_min_pulse_width_high     : 0.0;
	k_temp_min_pulse_width_low      : 0.0;
	k_temp_min_period               : 0.0;
	k_temp_rise_propagation         : 0.0;
	k_temp_fall_propagation         : 0.0;
	k_temp_rise_transition          : 0.0;
	k_temp_fall_transition          : 0.0;
	k_temp_recovery_fall            : 0.0;
	k_temp_recovery_rise            : 0.0;
	k_temp_setup_fall               : 0.0;
	k_temp_setup_rise               : 0.0;
	k_volt_cell_fall                : 0.0;
	k_volt_cell_rise                : 0.0;
	k_volt_hold_fall                : 0.0;
	k_volt_hold_rise                : 0.0;
	k_volt_min_pulse_width_high     : 0.0;
	k_volt_min_pulse_width_low      : 0.0;
	k_volt_min_period               : 0.0;
	k_volt_rise_propagation         : 0.0;
	k_volt_fall_propagation         : 0.0;
	k_volt_rise_transition	        : 0.0;
	k_volt_fall_transition	        : 0.0;
	k_volt_recovery_fall            : 0.0;
	k_volt_recovery_rise            : 0.0;
	k_volt_setup_fall               : 0.0;
	k_volt_setup_rise               : 0.0;


	operating_conditions(fast) {
		process	 : 1;
		temperature	 : -40.000;
		voltage	 : 1.320;
		tree_type	 : balanced_tree;
	}
        default_operating_conditions : fast;
	wire_load("sample") {
		resistance	 : 1.6e-05;
		capacitance	 : 0.0002;
		area	 : 1.7;
  		slope	 : 500;
		fanout_length	 (1,500);
	}
	output_voltage(GENERAL) {
		vol	 : 0.4;
		voh	 : VDD - 0.4;
		vomin	 : -0.5;
		vomax	 : VDD + 0.5;
	}
	input_voltage(CMOS) {
		vil	 : 0.3 * VDD;
		vih	 : 0.7 * VDD;
		vimin	 : -0.5;
		vimax	 : VDD + 0.5;
	}
	input_voltage(TTL) {
		vil	 : 0.8;
		vih	 : 2;
		vimin	 : -0.5;
		vimax	 : VDD + 0.5;
	}
        lu_table_template(ram_256X16A_delay_template) {
           variable_1 : input_net_transition;
           variable_2 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	lu_table_template(ram_256X16A_constraint_template) {
           variable_1 : related_pin_transition;
           variable_2 : constrained_pin_transition;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	lu_table_template(ram_256X16A_load_template) {
           variable_1 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
        power_lut_template(ram_256X16A_passive_energy_template_1x2) {
           variable_1 : input_transition_time;
               index_1 ("1000, 1001");
        }
	library_features(report_delay_calculation);
	type (ram_256X16A_DATA) {
		base_type : array ;
		data_type : bit ;
		bit_width : 16;
		bit_from : 15;
		bit_to : 0 ;
		downto : true ;
	}
	type (ram_256X16A_ADDRESS) {
		base_type : array ;
		data_type : bit ;
		bit_width : 8;
		bit_from : 7;
		bit_to : 0 ;
		downto : true ;
	}
cell(ram_256x16A) {
	area		 : 38933.141;
	dont_use	 : TRUE;
	dont_touch	 : TRUE;
        interface_timing : TRUE;
	memory() {
		type : ram;
		address_width : 8;
		word_width : 16;
	}
	bus(Q)	 {
		bus_type : ram_256X16A_DATA;
		direction : output;
		max_capacitance : 0.600;
                memory_read() {
			address : A;
		}
		timing() {
			related_pin :	"CLK" ;
			timing_type : rising_edge;
			timing_sense : non_unate;
			cell_rise(ram_256X16A_delay_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
			index_2 ("0.000, 0.020, 0.040, 0.080, 0.190, 0.370, 0.600");
			values ( \
			  "0.614, 0.624, 0.634, 0.655, 0.711, 0.782, 0.861", \
			  "0.619, 0.630, 0.640, 0.660, 0.717, 0.787, 0.867", \
			  "0.626, 0.636, 0.647, 0.667, 0.723, 0.794, 0.874", \
			  "0.640, 0.650, 0.661, 0.681, 0.737, 0.808, 0.888", \
			  "0.668, 0.678, 0.688, 0.709, 0.765, 0.836, 0.915", \
			  "0.695, 0.706, 0.716, 0.736, 0.793, 0.864, 0.943", \
			  "0.716, 0.726, 0.737, 0.757, 0.814, 0.884, 0.964" \
			)
			}
			rise_transition(ram_256X16A_load_template) {
			index_1 ("0.000, 0.020, 0.040, 0.080, 0.190, 0.370, 0.600");
			values ("0.045, 0.067, 0.089, 0.132, 0.252, 0.448, 0.699")
			}
			cell_fall(ram_256X16A_delay_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
			index_2 ("0.000, 0.020, 0.040, 0.080, 0.190, 0.370, 0.600");
			values ( \
			  "0.614, 0.624, 0.634, 0.655, 0.711, 0.782, 0.861", \
			  "0.619, 0.630, 0.640, 0.660, 0.717, 0.787, 0.867", \
			  "0.626, 0.636, 0.647, 0.667, 0.723, 0.794, 0.874", \
			  "0.640, 0.650, 0.661, 0.681, 0.737, 0.808, 0.888", \
			  "0.668, 0.678, 0.688, 0.709, 0.765, 0.836, 0.915", \
			  "0.695, 0.706, 0.716, 0.736, 0.793, 0.864, 0.943", \
			  "0.716, 0.726, 0.737, 0.757, 0.814, 0.884, 0.964" \
			)
			}
			fall_transition(ram_256X16A_load_template) {
			index_1 ("0.000, 0.020, 0.040, 0.080, 0.190, 0.370, 0.600");
			values ("0.030, 0.045, 0.060, 0.089, 0.169, 0.301, 0.469")
		}	}
        }

	pin(CLK) {
		direction : input;
		capacitance : 0.172
		clock	: true;
		min_pulse_width_low	: 0.123;
		min_pulse_width_high	: 0.038;
		min_period		: 0.695;
		max_transition		: 0.750;
		internal_power(){
			when : "!CEN & WEN";
        		rise_power(ram_256X16A_passive_energy_template_1x2) {
				index_1 ("0.0 1.0");
            			values ("31.872, 31.872")
        		}
        		fall_power(ram_256X16A_passive_energy_template_1x2) {
				index_1 ("0.0 1.0");
            			values ("0.0, 0.0")
        		}
		}
		internal_power(){
			when : "!CEN & !WEN";
			rise_power(ram_256X16A_passive_energy_template_1x2) {
	    			index_1 ("0.0 1.0");
	    			values ("37.296, 37.296")
			}	
			fall_power(ram_256X16A_passive_energy_template_1x2) {
	    			index_1 ("0.0 1.0");
            			values ("0.0, 0.0")
			}	
		}
	}

	pin(CEN) {
		direction : input;
		capacitance : 0.006;
		timing() {
			related_pin	: "CLK" ;
			timing_type	: setup_rising ;
			rise_constraint(ram_256X16A_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
			values ( \
			  "0.290, 0.291, 0.292, 0.295, 0.300, 0.305, 0.309", \
			  "0.285, 0.286, 0.287, 0.289, 0.294, 0.300, 0.303", \
			  "0.278, 0.279, 0.280, 0.282, 0.288, 0.293, 0.296", \
			  "0.264, 0.265, 0.266, 0.269, 0.274, 0.279, 0.283", \
			  "0.236, 0.237, 0.238, 0.241, 0.246, 0.251, 0.255", \
			  "0.208, 0.209, 0.211, 0.213, 0.218, 0.223, 0.227", \
			  "0.188, 0.189, 0.190, 0.192, 0.198, 0.203, 0.206" \
			)
			}
			fall_constraint(ram_256X16A_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
			values ( \
			  "0.194, 0.201, 0.209, 0.226, 0.261, 0.295, 0.321", \
			  "0.188, 0.195, 0.204, 0.221, 0.255, 0.289, 0.315", \
			  "0.181, 0.188, 0.197, 0.214, 0.248, 0.283, 0.308", \
			  "0.167, 0.174, 0.183, 0.200, 0.234, 0.269, 0.294", \
			  "0.140, 0.147, 0.155, 0.172, 0.207, 0.241, 0.267", \
			  "0.112, 0.119, 0.127, 0.145, 0.179, 0.213, 0.239", \
			  "0.091, 0.098, 0.107, 0.124, 0.158, 0.192, 0.218" \
			)
		}	}
		timing() {
			related_pin	: "CLK" ;
			timing_type	: hold_rising ;
			rise_constraint(ram_256X16A_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.024, 0.023, 0.022, 0.019, 0.014, 0.009, 0.005", \
			  "0.045, 0.044, 0.043, 0.040, 0.035, 0.030, 0.026" \
			)
				
			}
			fall_constraint(ram_256X16A_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000" \
			)
	}	}	}

	pin(WEN) {
		direction : input;
		capacitance : 0.007;
		timing() {
			related_pin	: "CLK" ;
			timing_type	: setup_rising ;
			rise_constraint(ram_256X16A_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
			values ( \
			  "0.217, 0.220, 0.223, 0.229, 0.242, 0.255, 0.264", \
			  "0.212, 0.214, 0.218, 0.224, 0.236, 0.249, 0.259", \
			  "0.205, 0.208, 0.211, 0.217, 0.230, 0.242, 0.252", \
			  "0.191, 0.194, 0.197, 0.203, 0.216, 0.228, 0.238", \
			  "0.163, 0.166, 0.169, 0.175, 0.188, 0.201, 0.210", \
			  "0.136, 0.138, 0.141, 0.148, 0.160, 0.173, 0.182", \
			  "0.115, 0.118, 0.121, 0.127, 0.140, 0.152, 0.162" \
			)
			}
			fall_constraint(ram_256X16A_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
			values ( \
			  "0.280, 0.287, 0.297, 0.316, 0.353, 0.391, 0.420", \
			  "0.274, 0.282, 0.291, 0.310, 0.348, 0.386, 0.414", \
			  "0.267, 0.275, 0.284, 0.303, 0.341, 0.379, 0.407", \
			  "0.253, 0.261, 0.270, 0.289, 0.327, 0.365, 0.393", \
			  "0.226, 0.233, 0.243, 0.262, 0.299, 0.337, 0.366", \
			  "0.198, 0.206, 0.215, 0.234, 0.272, 0.310, 0.338", \
			  "0.177, 0.185, 0.194, 0.213, 0.251, 0.289, 0.317" \
			)
		}	}
		timing() {
			related_pin	: "CLK" ;
			timing_type	: hold_rising ;
			rise_constraint(ram_256X16A_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000" \
			)
			}
			fall_constraint(ram_256X16A_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000" \
			)
	}	}	}

	bus(A)  {
		bus_type : ram_256X16A_ADDRESS;
		direction : input;
		capacitance : 0.018;
		timing() {
			related_pin	: "CLK"
			timing_type	: setup_rising ;
			rise_constraint(ram_256X16A_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
			values ( \
			  "0.231, 0.231, 0.231, 0.231, 0.231, 0.231, 0.231", \
			  "0.225, 0.225, 0.225, 0.225, 0.225, 0.225, 0.225", \
			  "0.218, 0.218, 0.218, 0.218, 0.218, 0.218, 0.218", \
			  "0.205, 0.205, 0.205, 0.205, 0.204, 0.204, 0.204", \
			  "0.177, 0.177, 0.177, 0.177, 0.177, 0.177, 0.177", \
			  "0.149, 0.149, 0.149, 0.149, 0.149, 0.149, 0.149", \
			  "0.128, 0.128, 0.128, 0.128, 0.128, 0.128, 0.128" \
			)
			}
			fall_constraint(ram_256X16A_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
			values ( \
			  "0.155, 0.160, 0.166, 0.179, 0.205, 0.230, 0.250", \
			  "0.149, 0.154, 0.161, 0.174, 0.199, 0.225, 0.244", \
			  "0.142, 0.147, 0.154, 0.167, 0.192, 0.218, 0.237", \
			  "0.128, 0.134, 0.140, 0.153, 0.178, 0.204, 0.223", \
			  "0.101, 0.106, 0.112, 0.125, 0.151, 0.176, 0.196", \
			  "0.073, 0.078, 0.085, 0.097, 0.123, 0.149, 0.168", \
			  "0.052, 0.057, 0.064, 0.077, 0.102, 0.128, 0.147" \
			)
		}	}
		timing() {
			related_pin	: "CLK"
			timing_type	: hold_rising ;
			rise_constraint(ram_256X16A_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.024, 0.024, 0.024, 0.024, 0.024, 0.025, 0.025", \
			  "0.052, 0.052, 0.052, 0.052, 0.052, 0.052, 0.052", \
			  "0.073, 0.073, 0.073, 0.073, 0.073, 0.073, 0.073" \
			)
			}
			fall_constraint(ram_256X16A_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.009, 0.004, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.036, 0.031, 0.025, 0.012, 0.000, 0.000, 0.000", \
			  "0.064, 0.059, 0.053, 0.040, 0.014, 0.000, 0.000", \
			  "0.085, 0.080, 0.073, 0.061, 0.035, 0.009, 0.000" \
			)
	}	}	}
	bus(D)	 {
		bus_type : ram_256X16A_DATA;
		direction : input;
		capacitance : 0.002;
		memory_write() {
			address : A;
			clocked_on : "CLK";
		}
		timing() {
			related_pin	: "CLK"
			timing_type	: setup_rising ;
			rise_constraint(ram_256X16A_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
			values ( \
			  "0.177, 0.176, 0.174, 0.169, 0.161, 0.153, 0.146", \
			  "0.172, 0.170, 0.168, 0.164, 0.156, 0.147, 0.141", \
			  "0.165, 0.163, 0.161, 0.157, 0.149, 0.140, 0.134", \
			  "0.151, 0.149, 0.147, 0.143, 0.135, 0.126, 0.120", \
			  "0.123, 0.122, 0.120, 0.115, 0.107, 0.099, 0.092", \
			  "0.096, 0.094, 0.092, 0.088, 0.079, 0.071, 0.065", \
			  "0.075, 0.073, 0.071, 0.067, 0.059, 0.050, 0.044" \
			)
			}
			fall_constraint(ram_256X16A_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
			values ( \
			  "0.109, 0.119, 0.131, 0.155, 0.203, 0.250, 0.286", \
			  "0.104, 0.113, 0.125, 0.149, 0.197, 0.245, 0.281", \
			  "0.097, 0.107, 0.118, 0.142, 0.190, 0.238, 0.274", \
			  "0.083, 0.093, 0.105, 0.129, 0.176, 0.224, 0.260", \
			  "0.055, 0.065, 0.077, 0.101, 0.149, 0.196, 0.232", \
			  "0.028, 0.037, 0.049, 0.073, 0.121, 0.169, 0.204", \
			  "0.007, 0.017, 0.028, 0.052, 0.100, 0.148, 0.184" \
			)
		}	}
		timing() {
			related_pin	: "CLK"
			timing_type	: hold_rising ;
			rise_constraint(ram_256X16A_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000" \
			)
			}
			fall_constraint(ram_256X16A_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.029, 0.019, 0.007, 0.000, 0.000, 0.000, 0.000", \
			  "0.056, 0.047, 0.035, 0.011, 0.000, 0.000, 0.000", \
			  "0.077, 0.068, 0.056, 0.032, 0.000, 0.000, 0.000" \
			)
		}	}
	}

	cell_leakage_power : 0.000;
  }
}
