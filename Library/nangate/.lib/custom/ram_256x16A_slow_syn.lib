/*
 *      CONFIDENTIAL AND PROPRIETARY SOFTWARE/DATA OF ARTISAN COMPONENTS, INC.
 *      
 *      Copyright (c) 2003 Artisan Components, Inc.  All Rights Reserved.
 *      
 *      Use of this Software/Data is subject to the terms and conditions of
 *      the applicable license agreement between Artisan Components, Inc. and
 *      Taiwan Semiconductor Manufacturing Company Ltd..  In addition, this Software/Data
 *      is protected by copyright law and international treaties.
 *      
 *      The copyright notice(s) in this Software/Data does not indicate actual
 *      or intended publication of this Software/Data.
 *
 *      Synopsys model for Synchronous Single-Port Ram
 *
 *      Library Name:   USERLIB
 *      Instance Name:  ram_256X16A
 *      Words:          256
 *      Word Width:     16
 *      Mux:            8
 *      Pipeline:       No
 *      Process:        slow
 *      Delays:		max
 *
 *      Creation Date:  2003-10-27 19:57:50Z
 *      Version:        2002Q1V0
 *
 *      Verified With: Synopsys Design Compiler
 *
 *      Modeling Assumptions: This library contains a black box description
 *          for a memory element.  At the library level, a
 *          default_max_transition constraint is set to the maximum
 *          characterized input slew.  Each output has a max_capacitance
 *          constraint set to the highest characterized output load.  These two
 *          constraints force Design Compiler to synthesize circuits that
 *          operate within the characterization space.  The user can tighten
 *          these constraints, if desired.  When writing SDF from Design
 *          Compiler, use the version 2.1 option.  This ensures the SDF will
 *          annotate to simulation models provided with this generator.
 *
 *      Modeling Limitations: 
 *          Due to limitations of the .lib format, some data reduction was
 *          necessary.  When reducing data, minimum values were chosen for the
 *          fast case corner and maximum values were used for the typical and
 *          best case corners.  It is recommended that critical timing and
 *          setup and hold times be checked at all corners.
 *
 *      Known Bugs: None.
 *
 *      Known Work Arounds: N/A
 *
 */

library(ram_256x16_slow) {
	delay_model		: table_lookup;
	revision		: 1.1;	
	date			: "2003-10-27 19:57:50Z";
	comment			: "Confidential Information of Artisan Components, Inc.  Use subject to Artisan Components license. Copyright (c) 2003 Artisan Components, Inc.";
	time_unit		: "1ns";
	voltage_unit		: "1V";
	current_unit		: "1mA";
	leakage_power_unit	: "1mW";
	nom_process		: 1;
	nom_temperature		: 125.000;
	nom_voltage		: 1.080;
	capacitive_load_unit	 (1,pf);

	pulling_resistance_unit	        : "1kohm";

	/* additional header data */
	default_cell_leakage_power      : 0;
	default_fanout_load		: 1;
	default_inout_pin_cap		: 0.005;
	default_input_pin_cap		: 0.005;
	default_output_pin_cap		: 0.0;
	default_max_transition		: 1.500;

        /* default attributes */
        default_leakage_power_density : 0.0;
        slew_derate_from_library      : 1;
        slew_lower_threshold_pct_fall : 10.0;
        slew_upper_threshold_pct_fall : 90.0;
        slew_lower_threshold_pct_rise : 10.0;
        slew_upper_threshold_pct_rise : 90.0;
        input_threshold_pct_fall      : 50.0;
        input_threshold_pct_rise      : 50.0;
        output_threshold_pct_fall     : 50.0;
        output_threshold_pct_rise     : 50.0;

 	/* k-factors */
 	k_process_cell_fall             : 1;
 	k_process_cell_leakage_power    : 0;
 	k_process_cell_rise             : 1;
 	k_process_fall_transition       : 1;
 	k_process_hold_fall             : 1;
 	k_process_hold_rise             : 1;
 	k_process_internal_power        : 0;
 	k_process_min_pulse_width_high  : 1;
 	k_process_min_pulse_width_low   : 1;
 	k_process_pin_cap               : 0;
 	k_process_recovery_fall         : 1;
 	k_process_recovery_rise         : 1;
 	k_process_rise_transition       : 1;
 	k_process_setup_fall            : 1;
 	k_process_setup_rise            : 1;
 	k_process_wire_cap              : 0;
 	k_process_wire_res              : 0;
	k_temp_cell_fall		: 0.0;
	k_temp_cell_rise		: 0.0;
	k_temp_hold_fall                : 0.0;
	k_temp_hold_rise                : 0.0;
	k_temp_min_pulse_width_high     : 0.0;
	k_temp_min_pulse_width_low      : 0.0;
	k_temp_min_period               : 0.0;
	k_temp_rise_propagation         : 0.0;
	k_temp_fall_propagation         : 0.0;
	k_temp_rise_transition          : 0.0;
	k_temp_fall_transition          : 0.0;
	k_temp_recovery_fall            : 0.0;
	k_temp_recovery_rise            : 0.0;
	k_temp_setup_fall               : 0.0;
	k_temp_setup_rise               : 0.0;
	k_volt_cell_fall                : 0.0;
	k_volt_cell_rise                : 0.0;
	k_volt_hold_fall                : 0.0;
	k_volt_hold_rise                : 0.0;
	k_volt_min_pulse_width_high     : 0.0;
	k_volt_min_pulse_width_low      : 0.0;
	k_volt_min_period               : 0.0;
	k_volt_rise_propagation         : 0.0;
	k_volt_fall_propagation         : 0.0;
	k_volt_rise_transition	        : 0.0;
	k_volt_fall_transition	        : 0.0;
	k_volt_recovery_fall            : 0.0;
	k_volt_recovery_rise            : 0.0;
	k_volt_setup_fall               : 0.0;
	k_volt_setup_rise               : 0.0;


	operating_conditions(slow) {
		process	 : 1;
		temperature	 : 125.000;
		voltage	 : 1.080;
		tree_type	 : balanced_tree;
	}
        default_operating_conditions : slow;
	wire_load("sample") {
		resistance	 : 1.6e-05;
		capacitance	 : 0.0002;
		area	 : 1.7;
  		slope	 : 500;
		fanout_length	 (1,500);
	}
	output_voltage(GENERAL) {
		vol	 : 0.4;
		voh	 : VDD - 0.4;
		vomin	 : -0.5;
		vomax	 : VDD + 0.5;
	}
	input_voltage(CMOS) {
		vil	 : 0.3 * VDD;
		vih	 : 0.7 * VDD;
		vimin	 : -0.5;
		vimax	 : VDD + 0.5;
	}
	input_voltage(TTL) {
		vil	 : 0.8;
		vih	 : 2;
		vimin	 : -0.5;
		vimax	 : VDD + 0.5;
	}
        lu_table_template(ram_256X16A_delay_template) {
           variable_1 : input_net_transition;
           variable_2 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	lu_table_template(ram_256X16A_constraint_template) {
           variable_1 : related_pin_transition;
           variable_2 : constrained_pin_transition;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	lu_table_template(ram_256X16A_load_template) {
           variable_1 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
        power_lut_template(ram_256X16A_passive_energy_template_1x2) {
           variable_1 : input_transition_time;
               index_1 ("1000, 1001");
        }
	library_features(report_delay_calculation);
	type (ram_256X16A_DATA) {
		base_type : array ;
		data_type : bit ;
		bit_width : 16;
		bit_from : 15;
		bit_to : 0 ;
		downto : true ;
	}
	type (ram_256X16A_ADDRESS) {
		base_type : array ;
		data_type : bit ;
		bit_width : 8;
		bit_from : 7;
		bit_to : 0 ;
		downto : true ;
	}
cell(ram_256x16A) {
	area		 : 38933.141;
	dont_use	 : TRUE;
	dont_touch	 : TRUE;
        interface_timing : TRUE;
	memory() {
		type : ram;
		address_width : 8;
		word_width : 16;
	}
	bus(Q)	 {
		bus_type : ram_256X16A_DATA;
		direction : output;
		max_capacitance : 0.600;
                memory_read() {
			address : A;
		}
		timing() {
			related_pin :	"CLK" ;
			timing_type : rising_edge;
			timing_sense : non_unate;
			cell_rise(ram_256X16A_delay_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			index_2 ("0.000, 0.020, 0.040, 0.080, 0.190, 0.370, 0.600");
			values ( \
			  "1.950, 1.974, 1.997, 2.044, 2.172, 2.382, 2.650", \
			  "1.961, 1.984, 2.008, 2.054, 2.183, 2.392, 2.660", \
			  "1.975, 1.998, 2.021, 2.068, 2.196, 2.406, 2.674", \
			  "2.001, 2.025, 2.048, 2.095, 2.223, 2.433, 2.701", \
			  "2.082, 2.105, 2.129, 2.175, 2.303, 2.513, 2.781", \
			  "2.216, 2.240, 2.263, 2.310, 2.438, 2.648, 2.916", \
			  "2.351, 2.374, 2.397, 2.444, 2.572, 2.782, 3.050" \
			)
			}
			rise_transition(ram_256X16A_load_template) {
			index_1 ("0.000, 0.020, 0.040, 0.080, 0.190, 0.370, 0.600");
			values ("0.064, 0.115, 0.165, 0.267, 0.546, 1.002, 1.585")
			}
			cell_fall(ram_256X16A_delay_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			index_2 ("0.000, 0.020, 0.040, 0.080, 0.190, 0.370, 0.600");
			values ( \
			  "2.018, 2.033, 2.049, 2.080, 2.164, 2.302, 2.479", \
			  "2.029, 2.044, 2.060, 2.090, 2.175, 2.313, 2.490", \
			  "2.042, 2.058, 2.073, 2.104, 2.188, 2.326, 2.503", \
			  "2.069, 2.085, 2.100, 2.131, 2.215, 2.353, 2.530", \
			  "2.150, 2.165, 2.180, 2.211, 2.296, 2.434, 2.610", \
			  "2.284, 2.299, 2.315, 2.345, 2.430, 2.568, 2.745", \
			  "2.418, 2.434, 2.449, 2.480, 2.564, 2.702, 2.879" \
			)
			}
			fall_transition(ram_256X16A_load_template) {
			index_1 ("0.000, 0.020, 0.040, 0.080, 0.190, 0.370, 0.600");
			values ("0.114, 0.145, 0.176, 0.238, 0.409, 0.689, 1.046")
		}	}
        }

	pin(CLK) {
		direction : input;
		capacitance : 0.157
		clock	: true;
		min_pulse_width_low	: 0.357;
		min_pulse_width_high	: 0.111;
		min_period		: 1.945;
		max_transition		: 1.500;
		internal_power(){
			when : "!CEN & WEN";
        		rise_power(ram_256X16A_passive_energy_template_1x2) {
				index_1 ("0.0 1.0");
            			values ("19.366, 19.366")
        		}
        		fall_power(ram_256X16A_passive_energy_template_1x2) {
				index_1 ("0.0 1.0");
            			values ("0.0, 0.0")
        		}
		}
		internal_power(){
			when : "!CEN & !WEN";
			rise_power(ram_256X16A_passive_energy_template_1x2) {
	    			index_1 ("0.0 1.0");
	    			values ("22.984, 22.984")
			}	
			fall_power(ram_256X16A_passive_energy_template_1x2) {
	    			index_1 ("0.0 1.0");
            			values ("0.0, 0.0")
			}	
		}
	}

	pin(CEN) {
		direction : input;
		capacitance : 0.006;
		timing() {
			related_pin	: "CLK" ;
			timing_type	: setup_rising ;
			rise_constraint(ram_256X16A_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			values ( \
			  "0.806, 0.811, 0.818, 0.830, 0.869, 0.933, 0.998", \
			  "0.795, 0.800, 0.807, 0.820, 0.858, 0.923, 0.987", \
			  "0.782, 0.787, 0.793, 0.806, 0.845, 0.909, 0.973", \
			  "0.755, 0.760, 0.766, 0.779, 0.818, 0.882, 0.947", \
			  "0.674, 0.679, 0.686, 0.699, 0.737, 0.802, 0.866", \
			  "0.540, 0.545, 0.552, 0.564, 0.603, 0.667, 0.732", \
			  "0.406, 0.411, 0.417, 0.430, 0.469, 0.533, 0.597" \
			)
			}
			fall_constraint(ram_256X16A_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			values ( \
			  "0.586, 0.595, 0.606, 0.628, 0.696, 0.808, 0.921", \
			  "0.575, 0.584, 0.595, 0.617, 0.685, 0.797, 0.910", \
			  "0.561, 0.570, 0.582, 0.604, 0.672, 0.784, 0.896", \
			  "0.534, 0.543, 0.555, 0.577, 0.645, 0.757, 0.869", \
			  "0.454, 0.463, 0.474, 0.497, 0.564, 0.676, 0.789", \
			  "0.320, 0.329, 0.340, 0.362, 0.430, 0.542, 0.655", \
			  "0.185, 0.194, 0.206, 0.228, 0.295, 0.408, 0.520" \
			)
		}	}
		timing() {
			related_pin	: "CLK" ;
			timing_type	: hold_rising ;
			rise_constraint(ram_256X16A_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.126, 0.120, 0.114, 0.101, 0.062, 0.000, 0.000", \
			  "0.260, 0.255, 0.248, 0.235, 0.197, 0.132, 0.068" \
			)
				
			}
			fall_constraint(ram_256X16A_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.074, 0.065, 0.053, 0.031, 0.000, 0.000, 0.000" \
			)
	}	}	}

	pin(WEN) {
		direction : input;
		capacitance : 0.007;
		timing() {
			related_pin	: "CLK" ;
			timing_type	: setup_rising ;
			rise_constraint(ram_256X16A_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			values ( \
			  "0.593, 0.600, 0.609, 0.627, 0.680, 0.770, 0.859", \
			  "0.582, 0.589, 0.598, 0.616, 0.669, 0.759, 0.848", \
			  "0.569, 0.576, 0.585, 0.602, 0.656, 0.745, 0.835", \
			  "0.542, 0.549, 0.558, 0.576, 0.629, 0.718, 0.808", \
			  "0.461, 0.468, 0.477, 0.495, 0.549, 0.638, 0.727", \
			  "0.327, 0.334, 0.343, 0.361, 0.414, 0.504, 0.593", \
			  "0.192, 0.200, 0.209, 0.226, 0.280, 0.369, 0.459" \
			)
			}
			fall_constraint(ram_256X16A_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			values ( \
			  "0.782, 0.792, 0.805, 0.830, 0.905, 1.031, 1.157", \
			  "0.771, 0.781, 0.794, 0.819, 0.895, 1.020, 1.146", \
			  "0.758, 0.768, 0.781, 0.806, 0.881, 1.007, 1.132", \
			  "0.731, 0.741, 0.754, 0.779, 0.854, 0.980, 1.106", \
			  "0.651, 0.661, 0.673, 0.698, 0.774, 0.899, 1.025", \
			  "0.516, 0.526, 0.539, 0.564, 0.639, 0.765, 0.891", \
			  "0.382, 0.392, 0.405, 0.430, 0.505, 0.631, 0.756" \
			)
		}	}
		timing() {
			related_pin	: "CLK" ;
			timing_type	: hold_rising ;
			rise_constraint(ram_256X16A_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000" \
			)
			}
			fall_constraint(ram_256X16A_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000" \
			)
	}	}	}

	bus(A)  {
		bus_type : ram_256X16A_ADDRESS;
		direction : input;
		capacitance : 0.017;
		timing() {
			related_pin	: "CLK"
			timing_type	: setup_rising ;
			rise_constraint(ram_256X16A_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			values ( \
			  "0.673, 0.677, 0.681, 0.690, 0.717, 0.762, 0.807", \
			  "0.663, 0.666, 0.671, 0.680, 0.706, 0.751, 0.796", \
			  "0.649, 0.653, 0.657, 0.666, 0.693, 0.738, 0.782", \
			  "0.622, 0.626, 0.630, 0.639, 0.666, 0.711, 0.755", \
			  "0.542, 0.545, 0.550, 0.559, 0.586, 0.630, 0.675", \
			  "0.407, 0.411, 0.416, 0.424, 0.451, 0.496, 0.541", \
			  "0.273, 0.277, 0.281, 0.290, 0.317, 0.362, 0.406" \
			)
			}
			fall_constraint(ram_256X16A_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			values ( \
			  "0.393, 0.399, 0.407, 0.423, 0.469, 0.547, 0.624", \
			  "0.382, 0.389, 0.396, 0.412, 0.458, 0.536, 0.613", \
			  "0.369, 0.375, 0.383, 0.398, 0.445, 0.522, 0.600", \
			  "0.342, 0.348, 0.356, 0.372, 0.418, 0.496, 0.573", \
			  "0.262, 0.268, 0.276, 0.291, 0.338, 0.415, 0.492", \
			  "0.127, 0.134, 0.141, 0.157, 0.203, 0.281, 0.358", \
			  "-0.007, -0.001, 0.007, 0.022, 0.069, 0.146, 0.224" \
			)
		}	}
		timing() {
			related_pin	: "CLK"
			timing_type	: hold_rising ;
			rise_constraint(ram_256X16A_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.050, 0.046, 0.042, 0.033, 0.006, 0.000, 0.000", \
			  "0.184, 0.181, 0.176, 0.167, 0.140, 0.096, 0.051", \
			  "0.319, 0.315, 0.310, 0.302, 0.275, 0.230, 0.185" \
			)
			}
			fall_constraint(ram_256X16A_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.044, 0.038, 0.030, 0.015, 0.000, 0.000, 0.000", \
			  "0.178, 0.172, 0.164, 0.149, 0.102, 0.025, 0.000", \
			  "0.313, 0.306, 0.299, 0.283, 0.237, 0.159, 0.082" \
			)
	}	}	}
	bus(D)	 {
		bus_type : ram_256X16A_DATA;
		direction : input;
		capacitance : 0.001;
		memory_write() {
			address : A;
			clocked_on : "CLK";
		}
		timing() {
			related_pin	: "CLK"
			timing_type	: setup_rising ;
			rise_constraint(ram_256X16A_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			values ( \
			  "0.526, 0.528, 0.530, 0.534, 0.546, 0.566, 0.587", \
			  "0.515, 0.517, 0.519, 0.523, 0.535, 0.556, 0.576", \
			  "0.502, 0.504, 0.506, 0.510, 0.522, 0.542, 0.562", \
			  "0.475, 0.477, 0.479, 0.483, 0.495, 0.515, 0.536", \
			  "0.394, 0.396, 0.398, 0.402, 0.414, 0.435, 0.455", \
			  "0.260, 0.262, 0.264, 0.268, 0.280, 0.300, 0.321", \
			  "0.126, 0.127, 0.129, 0.134, 0.146, 0.166, 0.186" \
			)
			}
			fall_constraint(ram_256X16A_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			values ( \
			  "0.325, 0.336, 0.349, 0.376, 0.456, 0.589, 0.723", \
			  "0.314, 0.325, 0.338, 0.365, 0.445, 0.579, 0.712", \
			  "0.301, 0.312, 0.325, 0.352, 0.432, 0.565, 0.699", \
			  "0.274, 0.285, 0.298, 0.325, 0.405, 0.538, 0.672", \
			  "0.194, 0.204, 0.218, 0.244, 0.324, 0.458, 0.591", \
			  "0.059, 0.070, 0.083, 0.110, 0.190, 0.324, 0.457", \
			  "-0.075, -0.064, -0.051, -0.024, 0.056, 0.189, 0.323" \
			)
		}	}
		timing() {
			related_pin	: "CLK"
			timing_type	: hold_rising ;
			rise_constraint(ram_256X16A_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000" \
			)
			}
			fall_constraint(ram_256X16A_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.135, 0.125, 0.111, 0.085, 0.005, 0.000, 0.000", \
			  "0.270, 0.259, 0.246, 0.219, 0.139, 0.005, 0.000" \
			)
		}	}
	}

	cell_leakage_power : 0.000;
  }
}
